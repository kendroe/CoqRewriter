rewriting subterm: ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) (not(f_Top.beq(x, y))  | not(f_Top.ble(x, y))) == True
  rewriting expression1: ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) (not(f_Top.beq(x, y))  | not(f_Top.ble(x, y))) == True
    rewriting expression1: ALL(y:C_Coq.Init.Datatypes.nat: <<19>>) <<262>>
      rewriting expression1: <<19>> == <<261>>
        rewriting expression1: True
          builtin True
          end builtin True
          rless(x, rplus(x, 1#1)) { True } -> True
          rless(0#1, rplus(1#1, x)) { True } -> True
          rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
          rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
          rless(x, x) { True } -> False
          rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
          rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
          rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
          rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
          rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
          rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
          rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
          rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
          rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
          rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
          rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
          rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
          rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
          rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
          rminus(x, x) { True } -> 0#1
          rminus(x, 0#1) { True } -> x
          rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
          rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
          rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
          rplus(x, 0#1) { True } = x
          nless(x, nplus(x, 1)) { True } -> True
          nless(0, nplus(1, x)) { True } -> True
          nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
          nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
          nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
          nless(x, x) { True } -> False
          nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
          nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
          nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
          nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
          nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
          nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
          ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
          nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
          nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
          nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
          nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
          nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
          nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
          nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
          nminus(x, x) { True } -> 0
          nminus(x, 0) { True } -> x
          nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
          nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
          nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
          nplus(x, 0) { True } = x
          nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
          preceq(0, y) { True } -> True
          nminus(x, y) == z { True } = x == nplus(y, z)
          x == nplus(y, z) { True } = nminus(x, y) == z
          x == y { nless(x, y) } = False
          x == nplus(x, 1) { True } -> False
          nplus(x, y) == nplus(x, z) { True } -> y == z
          y == z { True } = nplus(x, y) == nplus(x, z)
          nminus(x, a) == b { True } -> x == nplus(a, b)
          x == nplus(a, b) { True } = nminus(x, a) == b
          ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
          y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
          rminus(x, y) == z { True } = x == rplus(y, z)
          x == rplus(y, z) { True } = rminus(x, y) == z
          x == y { rless(x, y) } = False
          x == rplus(x, 1#1) { True } -> False
          rplus(x, y) == rplus(x, z) { True } -> y == z
          y == z { True } = rplus(x, y) == rplus(x, z)
          rminus(x, a) == b { True } -> x == rplus(a, b)
          x == rplus(a, b) { True } = rminus(x, a) == b
          rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
          y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
          nless(x, y) | nless(y, x) | x  == y { True } -> True
          rless(x, y) | rless(y, x) | x  == y { True } -> True
          nless(x, y) & nless(y, x) { True } -> False
          x  == y & nless(y, x) { True } -> False
          rless(x, y) & rless(y, x) { True } -> False
          x  == y & rless(y, x) { True } -> False
          False { nless(x, y) } = x == y
          False { True } = nless(x, y) & nless(y, x)
          False { True } = nless(x, y) & y  == x
          False { True } = x == nplus(x, 1)
          False { True } = nless(x, x)
          False { rless(x, y) } = x == y
          False { True } = rless(x, y) & rless(y, x)
          False { True } = rless(x, y) & y  == x
          False { True } = x == rplus(x, 1#1)
          False { True } = rless(x, x)
          True { True } = nless(x, nplus(x, 1))
          True { True } = preceq(0, y)
          True { True } = nless(0, nplus(1, x))
          True { True } = nless(x, y) | nless(y, x) | x  == y
          True { True } = nless(nplus(a, 1), b)
          True { True } = rless(x, rplus(x, 1#1))
          True { True } = rless(0, rplus(1#1, x))
          True { True } = rless(x, y) | rless(y, x) | x  == y
          0 { True } = nminus(x, x)
          x { True } = nminus(x, 0)
          x { True } = nplus(x, 0)
          0#1 { True } = rminus(x, x)
          x { True } = rminus(x, 0#1)
          x { True } = rplus(x, 0#1)
          DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
          Rules:
            P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
          Result:
            <<19>>
            True
        end rewrite for: True
        rewriting expression1: <<258>> | <<260>>
          Deriving not(f_Top.ble(x', y')) { True } -> False
            d not(f_Top.ble(x', y')) { N[True] } -> N[False]
            d f_Top.ble(x', y') { N[True] } -> not(N[False])
            Result:
              N[f_Top.ble(x', y')] { N[True] } -> not(N[False])
          end derive for: not(f_Top.ble(x', y')) { True } -> False
          Deriving not(f_Top.beq(x', y')) { True } -> False
            d not(f_Top.beq(x', y')) { N[True] } -> N[False]
            d f_Top.beq(x', y') { N[True] } -> not(N[False])
            Result:
              N[f_Top.beq(x', y')] { N[True] } -> not(N[False])
          end derive for: not(f_Top.beq(x', y')) { True } -> False
          rewriting expression1: not(<<257>>)
            rewriting expression1: f_Top.beq(<<1>>, <<4>>)
              rewriting expression1: y
                builtin y
                end builtin y
                rless(x, rplus(x, 1#1)) { True } -> True
                rless(0#1, rplus(1#1, x)) { True } -> True
                rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
                rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
                rless(x, x) { True } -> False
                rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
                rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
                rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
                rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
                rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
                rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
                rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
                rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
                rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
                rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
                rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
                rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
                rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
                rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
                rminus(x, x) { True } -> 0#1
                rminus(x, 0#1) { True } -> x
                rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
                rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
                rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
                rplus(x, 0#1) { True } = x
                nless(x, nplus(x, 1)) { True } -> True
                nless(0, nplus(1, x)) { True } -> True
                nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
                nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
                nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
                nless(x, x) { True } -> False
                nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
                nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
                nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
                nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
                nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
                nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
                ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
                nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
                nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
                nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
                nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
                nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
                nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
                nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
                nminus(x, x) { True } -> 0
                nminus(x, 0) { True } -> x
                nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
                nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
                nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
                nplus(x, 0) { True } = x
                nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
                preceq(0, y) { True } -> True
                nminus(x, y) == z { True } = x == nplus(y, z)
                x == nplus(y, z) { True } = nminus(x, y) == z
                x == y { nless(x, y) } = False
                x == nplus(x, 1) { True } -> False
                nplus(x, y) == nplus(x, z) { True } -> y == z
                y == z { True } = nplus(x, y) == nplus(x, z)
                nminus(x, a) == b { True } -> x == nplus(a, b)
                x == nplus(a, b) { True } = nminus(x, a) == b
                ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
                y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
                rminus(x, y) == z { True } = x == rplus(y, z)
                x == rplus(y, z) { True } = rminus(x, y) == z
                x == y { rless(x, y) } = False
                x == rplus(x, 1#1) { True } -> False
                rplus(x, y) == rplus(x, z) { True } -> y == z
                y == z { True } = rplus(x, y) == rplus(x, z)
                rminus(x, a) == b { True } -> x == rplus(a, b)
                x == rplus(a, b) { True } = rminus(x, a) == b
                rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
                y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
                nless(x, y) | nless(y, x) | x  == y { True } -> True
                rless(x, y) | rless(y, x) | x  == y { True } -> True
                nless(x, y) & nless(y, x) { True } -> False
                x  == y & nless(y, x) { True } -> False
                rless(x, y) & rless(y, x) { True } -> False
                x  == y & rless(y, x) { True } -> False
                False { nless(x, y) } = x == y
                False { True } = nless(x, y) & nless(y, x)
                False { True } = nless(x, y) & y  == x
                False { True } = x == nplus(x, 1)
                False { True } = nless(x, x)
                False { rless(x, y) } = x == y
                False { True } = rless(x, y) & rless(y, x)
                False { True } = rless(x, y) & y  == x
                False { True } = x == rplus(x, 1#1)
                False { True } = rless(x, x)
                True { True } = nless(x, nplus(x, 1))
                True { True } = preceq(0, y)
                True { True } = nless(0, nplus(1, x))
                True { True } = nless(x, y) | nless(y, x) | x  == y
                True { True } = nless(nplus(a, 1), b)
                True { True } = rless(x, rplus(x, 1#1))
                True { True } = rless(0, rplus(1#1, x))
                True { True } = rless(x, y) | rless(y, x) | x  == y
                0 { True } = nminus(x, x)
                x { True } = nminus(x, 0)
                x { True } = nplus(x, 0)
                0#1 { True } = rminus(x, x)
                x { True } = rminus(x, 0#1)
                x { True } = rplus(x, 0#1)
                DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Rules:
                  P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Result:
                  <<1>>
                  y
              end rewrite for: y
              rewriting expression1: x
                builtin x
                end builtin x
                rless(x, rplus(x, 1#1)) { True } -> True
                rless(0#1, rplus(1#1, x)) { True } -> True
                rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
                rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
                rless(x, x) { True } -> False
                rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
                rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
                rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
                rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
                rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
                rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
                rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
                rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
                rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
                rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
                rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
                rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
                rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
                rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
                rminus(x, x) { True } -> 0#1
                rminus(x, 0#1) { True } -> x
                rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
                rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
                rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
                rplus(x, 0#1) { True } = x
                nless(x, nplus(x, 1)) { True } -> True
                nless(0, nplus(1, x)) { True } -> True
                nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
                nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
                nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
                nless(x, x) { True } -> False
                nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
                nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
                nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
                nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
                nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
                nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
                ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
                nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
                nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
                nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
                nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
                nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
                nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
                nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
                nminus(x, x) { True } -> 0
                nminus(x, 0) { True } -> x
                nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
                nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
                nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
                nplus(x, 0) { True } = x
                nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
                preceq(0, y) { True } -> True
                nminus(x, y) == z { True } = x == nplus(y, z)
                x == nplus(y, z) { True } = nminus(x, y) == z
                x == y { nless(x, y) } = False
                x == nplus(x, 1) { True } -> False
                nplus(x, y) == nplus(x, z) { True } -> y == z
                y == z { True } = nplus(x, y) == nplus(x, z)
                nminus(x, a) == b { True } -> x == nplus(a, b)
                x == nplus(a, b) { True } = nminus(x, a) == b
                ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
                y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
                rminus(x, y) == z { True } = x == rplus(y, z)
                x == rplus(y, z) { True } = rminus(x, y) == z
                x == y { rless(x, y) } = False
                x == rplus(x, 1#1) { True } -> False
                rplus(x, y) == rplus(x, z) { True } -> y == z
                y == z { True } = rplus(x, y) == rplus(x, z)
                rminus(x, a) == b { True } -> x == rplus(a, b)
                x == rplus(a, b) { True } = rminus(x, a) == b
                rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
                y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
                nless(x, y) | nless(y, x) | x  == y { True } -> True
                rless(x, y) | rless(y, x) | x  == y { True } -> True
                nless(x, y) & nless(y, x) { True } -> False
                x  == y & nless(y, x) { True } -> False
                rless(x, y) & rless(y, x) { True } -> False
                x  == y & rless(y, x) { True } -> False
                False { nless(x, y) } = x == y
                False { True } = nless(x, y) & nless(y, x)
                False { True } = nless(x, y) & y  == x
                False { True } = x == nplus(x, 1)
                False { True } = nless(x, x)
                False { rless(x, y) } = x == y
                False { True } = rless(x, y) & rless(y, x)
                False { True } = rless(x, y) & y  == x
                False { True } = x == rplus(x, 1#1)
                False { True } = rless(x, x)
                True { True } = nless(x, nplus(x, 1))
                True { True } = preceq(0, y)
                True { True } = nless(0, nplus(1, x))
                True { True } = nless(x, y) | nless(y, x) | x  == y
                True { True } = nless(nplus(a, 1), b)
                True { True } = rless(x, rplus(x, 1#1))
                True { True } = rless(0, rplus(1#1, x))
                True { True } = rless(x, y) | rless(y, x) | x  == y
                0 { True } = nminus(x, x)
                x { True } = nminus(x, 0)
                x { True } = nplus(x, 0)
                0#1 { True } = rminus(x, x)
                x { True } = rminus(x, 0#1)
                x { True } = rplus(x, 0#1)
                DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Rules:
                  P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Result:
                  <<4>>
                  x
              end rewrite for: x
              builtin f_Top.beq(<<1>>, <<4>>)
              end builtin f_Top.beq(y, x)
              rless(x, rplus(x, 1#1)) { True } -> True
              rless(0#1, rplus(1#1, x)) { True } -> True
              rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
              rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
              rless(x, x) { True } -> False
              rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
              rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
              rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
              rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
              rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
              rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
              rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
              rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
              rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
              rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
              rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
              rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
              rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
              rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
              rminus(x, x) { True } -> 0#1
              rminus(x, 0#1) { True } -> x
              rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
              rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
              rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
              rplus(x, 0#1) { True } = x
              nless(x, nplus(x, 1)) { True } -> True
              nless(0, nplus(1, x)) { True } -> True
              nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
              nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
              nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
              nless(x, x) { True } -> False
              nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
              nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
              nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
              nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
              nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
              nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
              ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
              nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
              nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
              nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
              nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
              nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
              nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
              nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
              nminus(x, x) { True } -> 0
              nminus(x, 0) { True } -> x
              nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
              nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
              nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
              nplus(x, 0) { True } = x
              nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
              preceq(0, y) { True } -> True
              nminus(x, y) == z { True } = x == nplus(y, z)
              x == nplus(y, z) { True } = nminus(x, y) == z
              x == y { nless(x, y) } = False
              x == nplus(x, 1) { True } -> False
              nplus(x, y) == nplus(x, z) { True } -> y == z
              y == z { True } = nplus(x, y) == nplus(x, z)
              nminus(x, a) == b { True } -> x == nplus(a, b)
              x == nplus(a, b) { True } = nminus(x, a) == b
              ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
              y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
              rminus(x, y) == z { True } = x == rplus(y, z)
              x == rplus(y, z) { True } = rminus(x, y) == z
              x == y { rless(x, y) } = False
              x == rplus(x, 1#1) { True } -> False
              rplus(x, y) == rplus(x, z) { True } -> y == z
              y == z { True } = rplus(x, y) == rplus(x, z)
              rminus(x, a) == b { True } -> x == rplus(a, b)
              x == rplus(a, b) { True } = rminus(x, a) == b
              rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
              y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
              nless(x, y) | nless(y, x) | x  == y { True } -> True
              rless(x, y) | rless(y, x) | x  == y { True } -> True
              nless(x, y) & nless(y, x) { True } -> False
              x  == y & nless(y, x) { True } -> False
              rless(x, y) & rless(y, x) { True } -> False
              x  == y & rless(y, x) { True } -> False
              False { nless(x, y) } = x == y
              False { True } = nless(x, y) & nless(y, x)
              False { True } = nless(x, y) & y  == x
              False { True } = x == nplus(x, 1)
              False { True } = nless(x, x)
              False { rless(x, y) } = x == y
              False { True } = rless(x, y) & rless(y, x)
              False { True } = rless(x, y) & y  == x
              False { True } = x == rplus(x, 1#1)
              False { True } = rless(x, x)
              True { True } = nless(x, nplus(x, 1))
              True { True } = preceq(0, y)
              True { True } = nless(0, nplus(1, x))
              True { True } = nless(x, y) | nless(y, x) | x  == y
              True { True } = nless(nplus(a, 1), b)
              True { True } = rless(x, rplus(x, 1#1))
              True { True } = rless(0, rplus(1#1, x))
              True { True } = rless(x, y) | rless(y, x) | x  == y
              0 { True } = nminus(x, x)
              x { True } = nminus(x, 0)
              x { True } = nplus(x, 0)
              0#1 { True } = rminus(x, x)
              x { True } = rminus(x, 0#1)
              x { True } = rplus(x, 0#1)
              DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
              Rules:
                P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
              KB Rewriting f_Top.beq(y, x) 1 1
                term f_Top.beq(y, x)
                env_term f_Top.ble(x, y)
                env_op_term f_Top.ble(x, y)
                cond_term f_Top.ble(x, y)
                cond_term f_Top.ble(x, y)
                exp_term f_Top.beq(y, x)
                all_term f_Top.beq(y, x)
                all_term f_Top.ble(x, y)
                all_term f_Top.ble(x, y)
                cond_term2 f_Top.ble(x, y)
                cond_term2 f_Top.ble(x, y)
                Operator ETO f_Top.ble f_Top.beq
                cond_term f_Top.ble(x, y)
                cond_term f_Top.ble(x, y)
                terms f_Top.beq(y, x)
                elaborate term = f_Top.ble(<<4>>, <<1>>)
                elaborate term = f_Top.ble(<<4>>, <<1>>)
                elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                    terms transitive f_Top.ble(<<4>>, <<1>>)
                    terms transitive f_Top.ble(<<4>>, <<1>>)
                    new_transitive_input f_Top.ble(<<4>>, <<1>>)
                    new_transitive_input f_Top.ble(<<4>>, <<1>>)
                    new_transitive term f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.ble(<<4>>, <<1>>)
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.ble(<<4>>, <<1>>)
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                Elaboration
                    t = f_Top.ble(<<4>>, <<1>>)

                elaborate term = f_Top.beq(<<1>>, <<4>>)
                elaborate term = f_Top.ble(<<4>>, <<1>>)
                elaborate term = f_Top.ble(<<4>>, <<1>>)
                elaborate term2 = f_Top.beq(<<1>>, <<4>>)
                elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                    terms transitive f_Top.beq(<<1>>, <<4>>)
                    terms transitive f_Top.ble(<<4>>, <<1>>)
                    terms transitive f_Top.ble(<<4>>, <<1>>)
                    new_transitive_input f_Top.beq(<<1>>, <<4>>)
                    new_transitive_input f_Top.ble(<<4>>, <<1>>)
                    new_transitive_input f_Top.ble(<<4>>, <<1>>)
                    new_transitive term f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    a f_Top.beq(<<4>>, <<4>>)
                    a f_Top.beq(<<1>>, <<1>>)
                    a f_Top.ble(<<1>>, <<1>>)
                    a f_Top.ble(<<4>>, <<4>>)
                ta1 count = 5
                    ta1 = f_Top.ble(<<1>>, <<1>>)
                    ta1 = f_Top.beq(<<1>>, <<1>>)
                    ta1 = f_Top.beq(<<1>>, <<4>>)
                    ta1 = f_Top.ble(<<4>>, <<4>>)
                    ta1 = f_Top.beq(<<4>>, <<4>>)
                    t2 = f_Top.beq(<<1>>, <<1>>)
                    t2 = f_Top.beq(<<1>>, <<4>>)
                    t2 = f_Top.beq(<<4>>, <<4>>)
                    new_transitive_input f_Top.beq(<<4>>, <<4>>)
                    new_transitive_input f_Top.beq(<<1>>, <<1>>)
                    new_transitive_input f_Top.ble(<<1>>, <<1>>)
                    new_transitive_input f_Top.ble(<<4>>, <<4>>)
                    new_transitive term f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.ble(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.ble(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.ble(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.ble(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<1>>)
                    b f_Top.ble(<<1>>, <<4>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<1>>)
                    b f_Top.ble(<<1>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<1>>, <<4>>)
                    b f_Top.ble(<<4>>, <<1>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<1>>, <<4>>)
                    b f_Top.ble(<<4>>, <<1>>)
                Elaboration
                    t = f_Top.beq(<<1>>, <<1>>)

                    t = f_Top.beq(<<1>>, <<4>>)

                    t = f_Top.beq(<<4>>, <<4>>)

                results1 f_Top.ble(<<4>>, <<1>>)
                results2 f_Top.beq(<<1>>, <<1>>)
                results2 f_Top.beq(<<1>>, <<4>>)
                results2 f_Top.beq(<<4>>, <<4>>)
                Default case
                return f_Top.beq(<<1>>, <<4>>)
                Results: f_Top.beq(y, x)
                  f_Top.beq(<<1>>, <<4>>)
              Result:
                <<257>>
                f_Top.beq(y, x)
            end rewrite for: f_Top.beq(<<1>>, <<4>>)
            KB Rewriting not(f_Top.beq(<<1>>, <<4>>)) 1 1
              term not(f_Top.beq(<<1>>, <<4>>))
              env_term f_Top.ble(x, y)
              env_op_term f_Top.ble(x, y)
              cond_term f_Top.ble(x, y)
              cond_term f_Top.ble(x, y)
              exp_term not(f_Top.beq(<<1>>, <<4>>))
              all_term not(f_Top.beq(<<1>>, <<4>>))
              all_term f_Top.ble(x, y)
              all_term f_Top.ble(x, y)
              cond_term2 f_Top.ble(x, y)
              cond_term2 f_Top.ble(x, y)
              Operator ETO f_Top.ble f_Top.beq
              cond_term f_Top.ble(x, y)
              cond_term f_Top.ble(x, y)
              terms not(f_Top.beq(<<1>>, <<4>>))
              elaborate term = f_Top.ble(<<4>>, <<1>>)
              elaborate term = f_Top.ble(<<4>>, <<1>>)
              elaborate term2 = f_Top.ble(<<4>>, <<1>>)
              elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                  terms transitive f_Top.ble(<<4>>, <<1>>)
                  terms transitive f_Top.ble(<<4>>, <<1>>)
                  new_transitive_input f_Top.ble(<<4>>, <<1>>)
                  new_transitive_input f_Top.ble(<<4>>, <<1>>)
                  new_transitive term f_Top.ble(<<4>>, <<1>>)
                  new_transitive t f_Top.ble(<<4>>, <<1>>)
                  new_transitive t f_Top.ble(<<4>>, <<1>>)
              closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term f_Top.ble(<<4>>, <<1>>)
                  new_transitive t f_Top.ble(<<4>>, <<1>>)
                  new_transitive t f_Top.ble(<<4>>, <<1>>)
              closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = f_Top.ble(<<4>>, <<1>>)

              elaborate term = not(f_Top.beq(<<1>>, <<4>>))
              elaborate term = f_Top.ble(<<4>>, <<1>>)
              elaborate term = f_Top.ble(<<4>>, <<1>>)
              elaborate term2 = not(f_Top.beq(<<1>>, <<4>>))
              elaborate term2 = f_Top.ble(<<4>>, <<1>>)
              elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                  terms transitive not(f_Top.beq(<<1>>, <<4>>))
                  terms transitive f_Top.ble(<<4>>, <<1>>)
                  terms transitive f_Top.ble(<<4>>, <<1>>)
                  new_transitive_input not(f_Top.beq(<<1>>, <<4>>))
                  new_transitive_input f_Top.ble(<<4>>, <<1>>)
                  new_transitive_input f_Top.ble(<<4>>, <<1>>)
                  new_transitive term not(f_Top.beq(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
              closure_terms not(f_Top.beq(<<1>>, <<4>>)) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.beq(<<1>>, <<4>>)) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term f_Top.ble(<<4>>, <<1>>)
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
              closure_terms f_Top.ble(<<4>>, <<1>>) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.ble(<<4>>, <<1>>) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term f_Top.ble(<<4>>, <<1>>)
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
              closure_terms f_Top.ble(<<4>>, <<1>>) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.ble(<<4>>, <<1>>) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = not(f_Top.ble(<<1>>, <<4>>))

              results1 f_Top.ble(<<4>>, <<1>>)
              results2 not(f_Top.ble(<<1>>, <<4>>))
              Default case
              return not(f_Top.ble(<<1>>, <<4>>))
              Results: not(f_Top.beq(<<1>>, <<4>>))
                not(f_Top.ble(<<1>>, <<4>>))
            comparing not(f_Top.ble(<<1>>, <<4>>)) not(f_Top.beq(<<1>>, <<4>>))
            comparing f_Top.ble(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
            builtin not(f_Top.beq(<<1>>, <<4>>))
            end builtin not(f_Top.beq(<<1>>, <<4>>))
            rless(x, rplus(x, 1#1)) { True } -> True
            rless(0#1, rplus(1#1, x)) { True } -> True
            rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
            rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
            rless(x, x) { True } -> False
            rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
            rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
            rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
            rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
            rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
            rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
            rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
            rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
            rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
            rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
            rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
            rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
            rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
            rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
            rminus(x, x) { True } -> 0#1
            rminus(x, 0#1) { True } -> x
            rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
            rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
            rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
            rplus(x, 0#1) { True } = x
            nless(x, nplus(x, 1)) { True } -> True
            nless(0, nplus(1, x)) { True } -> True
            nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
            nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
            nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
            nless(x, x) { True } -> False
            nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
            nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
            nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
            nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
            nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
            nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
            ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
            nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
            nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
            nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
            nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
            nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
            nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
            nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
            nminus(x, x) { True } -> 0
            nminus(x, 0) { True } -> x
            nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
            nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
            nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
            nplus(x, 0) { True } = x
            nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
            preceq(0, y) { True } -> True
            nminus(x, y) == z { True } = x == nplus(y, z)
            x == nplus(y, z) { True } = nminus(x, y) == z
            x == y { nless(x, y) } = False
            x == nplus(x, 1) { True } -> False
            nplus(x, y) == nplus(x, z) { True } -> y == z
            y == z { True } = nplus(x, y) == nplus(x, z)
            nminus(x, a) == b { True } -> x == nplus(a, b)
            x == nplus(a, b) { True } = nminus(x, a) == b
            ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
            y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
            rminus(x, y) == z { True } = x == rplus(y, z)
            x == rplus(y, z) { True } = rminus(x, y) == z
            x == y { rless(x, y) } = False
            x == rplus(x, 1#1) { True } -> False
            rplus(x, y) == rplus(x, z) { True } -> y == z
            y == z { True } = rplus(x, y) == rplus(x, z)
            rminus(x, a) == b { True } -> x == rplus(a, b)
            x == rplus(a, b) { True } = rminus(x, a) == b
            rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
            y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
            nless(x, y) | nless(y, x) | x  == y { True } -> True
            rless(x, y) | rless(y, x) | x  == y { True } -> True
            nless(x, y) & nless(y, x) { True } -> False
            x  == y & nless(y, x) { True } -> False
            rless(x, y) & rless(y, x) { True } -> False
            x  == y & rless(y, x) { True } -> False
            False { nless(x, y) } = x == y
            False { True } = nless(x, y) & nless(y, x)
            False { True } = nless(x, y) & y  == x
            False { True } = x == nplus(x, 1)
            False { True } = nless(x, x)
            False { rless(x, y) } = x == y
            False { True } = rless(x, y) & rless(y, x)
            False { True } = rless(x, y) & y  == x
            False { True } = x == rplus(x, 1#1)
            False { True } = rless(x, x)
            True { True } = nless(x, nplus(x, 1))
            True { True } = preceq(0, y)
            True { True } = nless(0, nplus(1, x))
            True { True } = nless(x, y) | nless(y, x) | x  == y
            True { True } = nless(nplus(a, 1), b)
            True { True } = rless(x, rplus(x, 1#1))
            True { True } = rless(0, rplus(1#1, x))
            True { True } = rless(x, y) | rless(y, x) | x  == y
            0 { True } = nminus(x, x)
            x { True } = nminus(x, 0)
            x { True } = nplus(x, 0)
            0#1 { True } = rminus(x, x)
            x { True } = rminus(x, 0#1)
            x { True } = rplus(x, 0#1)
            DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Rules:
              P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            KB Rewriting not(f_Top.beq(<<1>>, <<4>>)) 1 1
              term not(f_Top.beq(<<1>>, <<4>>))
              env_term f_Top.ble(x, y)
              env_op_term f_Top.ble(x, y)
              cond_term f_Top.ble(x, y)
              cond_term f_Top.ble(x, y)
              exp_term not(f_Top.beq(<<1>>, <<4>>))
              all_term not(f_Top.beq(<<1>>, <<4>>))
              all_term f_Top.ble(x, y)
              all_term f_Top.ble(x, y)
              cond_term2 f_Top.ble(x, y)
              cond_term2 f_Top.ble(x, y)
              Operator ETO f_Top.ble f_Top.beq
              cond_term f_Top.ble(x, y)
              cond_term f_Top.ble(x, y)
              terms not(f_Top.beq(<<1>>, <<4>>))
              elaborate term = f_Top.ble(<<4>>, <<1>>)
              elaborate term = f_Top.ble(<<4>>, <<1>>)
              elaborate term2 = f_Top.ble(<<4>>, <<1>>)
              elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                  terms transitive f_Top.ble(<<4>>, <<1>>)
                  terms transitive f_Top.ble(<<4>>, <<1>>)
                  new_transitive_input f_Top.ble(<<4>>, <<1>>)
                  new_transitive_input f_Top.ble(<<4>>, <<1>>)
                  new_transitive term f_Top.ble(<<4>>, <<1>>)
                  new_transitive t f_Top.ble(<<4>>, <<1>>)
                  new_transitive t f_Top.ble(<<4>>, <<1>>)
              closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term f_Top.ble(<<4>>, <<1>>)
                  new_transitive t f_Top.ble(<<4>>, <<1>>)
                  new_transitive t f_Top.ble(<<4>>, <<1>>)
              closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = f_Top.ble(<<4>>, <<1>>)

              elaborate term = not(f_Top.beq(<<1>>, <<4>>))
              elaborate term = f_Top.ble(<<4>>, <<1>>)
              elaborate term = f_Top.ble(<<4>>, <<1>>)
              elaborate term2 = not(f_Top.beq(<<1>>, <<4>>))
              elaborate term2 = f_Top.ble(<<4>>, <<1>>)
              elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                  terms transitive not(f_Top.beq(<<1>>, <<4>>))
                  terms transitive f_Top.ble(<<4>>, <<1>>)
                  terms transitive f_Top.ble(<<4>>, <<1>>)
                  new_transitive_input not(f_Top.beq(<<1>>, <<4>>))
                  new_transitive_input f_Top.ble(<<4>>, <<1>>)
                  new_transitive_input f_Top.ble(<<4>>, <<1>>)
                  new_transitive term not(f_Top.beq(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
              closure_terms not(f_Top.beq(<<1>>, <<4>>)) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.beq(<<1>>, <<4>>)) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term f_Top.ble(<<4>>, <<1>>)
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
              closure_terms f_Top.ble(<<4>>, <<1>>) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.ble(<<4>>, <<1>>) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term f_Top.ble(<<4>>, <<1>>)
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<1>>, <<4>>))
              closure_terms f_Top.ble(<<4>>, <<1>>) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.ble(<<4>>, <<1>>) not(f_Top.ble(<<1>>, <<4>>))
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = not(f_Top.ble(<<1>>, <<4>>))

              results1 f_Top.ble(<<4>>, <<1>>)
              results2 not(f_Top.ble(<<1>>, <<4>>))
              Default case
              return not(f_Top.ble(<<1>>, <<4>>))
              Results: not(f_Top.beq(<<1>>, <<4>>))
                not(f_Top.ble(<<1>>, <<4>>))
            comparing not(f_Top.ble(<<1>>, <<4>>)) not(f_Top.beq(<<1>>, <<4>>))
            comparing f_Top.ble(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
            Result:
              <<258>>
              not(f_Top.beq(y, x))
          end rewrite for: not(<<257>>)
          equal <<258>> not(<<257>>)
          equal: Yes
          rewriting expression1: not(<<259>>)
            rewriting expression1: f_Top.ble(<<4>>, <<1>>)
              rewriting expression1: x
                builtin x
                end builtin x
                rless(x, rplus(x, 1#1)) { True } -> True
                rless(0#1, rplus(1#1, x)) { True } -> True
                rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
                rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
                rless(x, x) { True } -> False
                rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
                rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
                rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
                rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
                rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
                rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
                rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
                rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
                rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
                rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
                rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
                rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
                rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
                rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
                rminus(x, x) { True } -> 0#1
                rminus(x, 0#1) { True } -> x
                rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
                rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
                rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
                rplus(x, 0#1) { True } = x
                nless(x, nplus(x, 1)) { True } -> True
                nless(0, nplus(1, x)) { True } -> True
                nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
                nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
                nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
                nless(x, x) { True } -> False
                nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
                nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
                nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
                nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
                nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
                nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
                ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
                nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
                nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
                nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
                nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
                nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
                nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
                nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
                nminus(x, x) { True } -> 0
                nminus(x, 0) { True } -> x
                nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
                nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
                nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
                nplus(x, 0) { True } = x
                nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
                preceq(0, y) { True } -> True
                nminus(x, y) == z { True } = x == nplus(y, z)
                x == nplus(y, z) { True } = nminus(x, y) == z
                x == y { nless(x, y) } = False
                x == nplus(x, 1) { True } -> False
                nplus(x, y) == nplus(x, z) { True } -> y == z
                y == z { True } = nplus(x, y) == nplus(x, z)
                nminus(x, a) == b { True } -> x == nplus(a, b)
                x == nplus(a, b) { True } = nminus(x, a) == b
                ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
                y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
                rminus(x, y) == z { True } = x == rplus(y, z)
                x == rplus(y, z) { True } = rminus(x, y) == z
                x == y { rless(x, y) } = False
                x == rplus(x, 1#1) { True } -> False
                rplus(x, y) == rplus(x, z) { True } -> y == z
                y == z { True } = rplus(x, y) == rplus(x, z)
                rminus(x, a) == b { True } -> x == rplus(a, b)
                x == rplus(a, b) { True } = rminus(x, a) == b
                rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
                y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
                nless(x, y) | nless(y, x) | x  == y { True } -> True
                rless(x, y) | rless(y, x) | x  == y { True } -> True
                nless(x, y) & nless(y, x) { True } -> False
                x  == y & nless(y, x) { True } -> False
                rless(x, y) & rless(y, x) { True } -> False
                x  == y & rless(y, x) { True } -> False
                False { nless(x, y) } = x == y
                False { True } = nless(x, y) & nless(y, x)
                False { True } = nless(x, y) & y  == x
                False { True } = x == nplus(x, 1)
                False { True } = nless(x, x)
                False { rless(x, y) } = x == y
                False { True } = rless(x, y) & rless(y, x)
                False { True } = rless(x, y) & y  == x
                False { True } = x == rplus(x, 1#1)
                False { True } = rless(x, x)
                True { True } = nless(x, nplus(x, 1))
                True { True } = preceq(0, y)
                True { True } = nless(0, nplus(1, x))
                True { True } = nless(x, y) | nless(y, x) | x  == y
                True { True } = nless(nplus(a, 1), b)
                True { True } = rless(x, rplus(x, 1#1))
                True { True } = rless(0, rplus(1#1, x))
                True { True } = rless(x, y) | rless(y, x) | x  == y
                0 { True } = nminus(x, x)
                x { True } = nminus(x, 0)
                x { True } = nplus(x, 0)
                0#1 { True } = rminus(x, x)
                x { True } = rminus(x, 0#1)
                x { True } = rplus(x, 0#1)
                DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Rules:
                  P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Result:
                  <<4>>
                  x
              end rewrite for: x
              rewriting expression1: y
                builtin y
                end builtin y
                rless(x, rplus(x, 1#1)) { True } -> True
                rless(0#1, rplus(1#1, x)) { True } -> True
                rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
                rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
                rless(x, x) { True } -> False
                rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
                rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
                rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
                rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
                rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
                rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
                rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
                rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
                rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
                rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
                rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
                rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
                rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
                rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
                rminus(x, x) { True } -> 0#1
                rminus(x, 0#1) { True } -> x
                rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
                rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
                rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
                rplus(x, 0#1) { True } = x
                nless(x, nplus(x, 1)) { True } -> True
                nless(0, nplus(1, x)) { True } -> True
                nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
                nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
                nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
                nless(x, x) { True } -> False
                nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
                nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
                nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
                nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
                nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
                nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
                ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
                nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
                nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
                nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
                nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
                nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
                nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
                nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
                nminus(x, x) { True } -> 0
                nminus(x, 0) { True } -> x
                nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
                nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
                nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
                nplus(x, 0) { True } = x
                nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
                preceq(0, y) { True } -> True
                nminus(x, y) == z { True } = x == nplus(y, z)
                x == nplus(y, z) { True } = nminus(x, y) == z
                x == y { nless(x, y) } = False
                x == nplus(x, 1) { True } -> False
                nplus(x, y) == nplus(x, z) { True } -> y == z
                y == z { True } = nplus(x, y) == nplus(x, z)
                nminus(x, a) == b { True } -> x == nplus(a, b)
                x == nplus(a, b) { True } = nminus(x, a) == b
                ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
                y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
                rminus(x, y) == z { True } = x == rplus(y, z)
                x == rplus(y, z) { True } = rminus(x, y) == z
                x == y { rless(x, y) } = False
                x == rplus(x, 1#1) { True } -> False
                rplus(x, y) == rplus(x, z) { True } -> y == z
                y == z { True } = rplus(x, y) == rplus(x, z)
                rminus(x, a) == b { True } -> x == rplus(a, b)
                x == rplus(a, b) { True } = rminus(x, a) == b
                rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
                y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
                nless(x, y) | nless(y, x) | x  == y { True } -> True
                rless(x, y) | rless(y, x) | x  == y { True } -> True
                nless(x, y) & nless(y, x) { True } -> False
                x  == y & nless(y, x) { True } -> False
                rless(x, y) & rless(y, x) { True } -> False
                x  == y & rless(y, x) { True } -> False
                False { nless(x, y) } = x == y
                False { True } = nless(x, y) & nless(y, x)
                False { True } = nless(x, y) & y  == x
                False { True } = x == nplus(x, 1)
                False { True } = nless(x, x)
                False { rless(x, y) } = x == y
                False { True } = rless(x, y) & rless(y, x)
                False { True } = rless(x, y) & y  == x
                False { True } = x == rplus(x, 1#1)
                False { True } = rless(x, x)
                True { True } = nless(x, nplus(x, 1))
                True { True } = preceq(0, y)
                True { True } = nless(0, nplus(1, x))
                True { True } = nless(x, y) | nless(y, x) | x  == y
                True { True } = nless(nplus(a, 1), b)
                True { True } = rless(x, rplus(x, 1#1))
                True { True } = rless(0, rplus(1#1, x))
                True { True } = rless(x, y) | rless(y, x) | x  == y
                0 { True } = nminus(x, x)
                x { True } = nminus(x, 0)
                x { True } = nplus(x, 0)
                0#1 { True } = rminus(x, x)
                x { True } = rminus(x, 0#1)
                x { True } = rplus(x, 0#1)
                DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Rules:
                  P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                  f_Top.beq(x', y') { True } -> not(False)
                match f_Top.beq(x', y') y
                end match f_Top.beq(x', y') y
                Result:
                  <<1>>
                  y
              end rewrite for: y
              builtin f_Top.ble(<<4>>, <<1>>)
              end builtin f_Top.ble(x, y)
              rless(x, rplus(x, 1#1)) { True } -> True
              rless(0#1, rplus(1#1, x)) { True } -> True
              rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
              rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
              rless(x, x) { True } -> False
              rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
              rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
              rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
              rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
              rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
              rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
              rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
              rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
              rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
              rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
              rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
              rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
              rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
              rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
              rminus(x, x) { True } -> 0#1
              rminus(x, 0#1) { True } -> x
              rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
              rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
              rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
              rplus(x, 0#1) { True } = x
              nless(x, nplus(x, 1)) { True } -> True
              nless(0, nplus(1, x)) { True } -> True
              nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
              nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
              nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
              nless(x, x) { True } -> False
              nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
              nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
              nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
              nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
              nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
              nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
              ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
              nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
              nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
              nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
              nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
              nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
              nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
              nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
              nminus(x, x) { True } -> 0
              nminus(x, 0) { True } -> x
              nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
              nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
              nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
              nplus(x, 0) { True } = x
              nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
              preceq(0, y) { True } -> True
              nminus(x, y) == z { True } = x == nplus(y, z)
              x == nplus(y, z) { True } = nminus(x, y) == z
              x == y { nless(x, y) } = False
              x == nplus(x, 1) { True } -> False
              nplus(x, y) == nplus(x, z) { True } -> y == z
              y == z { True } = nplus(x, y) == nplus(x, z)
              nminus(x, a) == b { True } -> x == nplus(a, b)
              x == nplus(a, b) { True } = nminus(x, a) == b
              ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
              y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
              rminus(x, y) == z { True } = x == rplus(y, z)
              x == rplus(y, z) { True } = rminus(x, y) == z
              x == y { rless(x, y) } = False
              x == rplus(x, 1#1) { True } -> False
              rplus(x, y) == rplus(x, z) { True } -> y == z
              y == z { True } = rplus(x, y) == rplus(x, z)
              rminus(x, a) == b { True } -> x == rplus(a, b)
              x == rplus(a, b) { True } = rminus(x, a) == b
              rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
              y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
              nless(x, y) | nless(y, x) | x  == y { True } -> True
              rless(x, y) | rless(y, x) | x  == y { True } -> True
              nless(x, y) & nless(y, x) { True } -> False
              x  == y & nless(y, x) { True } -> False
              rless(x, y) & rless(y, x) { True } -> False
              x  == y & rless(y, x) { True } -> False
              False { nless(x, y) } = x == y
              False { True } = nless(x, y) & nless(y, x)
              False { True } = nless(x, y) & y  == x
              False { True } = x == nplus(x, 1)
              False { True } = nless(x, x)
              False { rless(x, y) } = x == y
              False { True } = rless(x, y) & rless(y, x)
              False { True } = rless(x, y) & y  == x
              False { True } = x == rplus(x, 1#1)
              False { True } = rless(x, x)
              True { True } = nless(x, nplus(x, 1))
              True { True } = preceq(0, y)
              True { True } = nless(0, nplus(1, x))
              True { True } = nless(x, y) | nless(y, x) | x  == y
              True { True } = nless(nplus(a, 1), b)
              True { True } = rless(x, rplus(x, 1#1))
              True { True } = rless(0, rplus(1#1, x))
              True { True } = rless(x, y) | rless(y, x) | x  == y
              0 { True } = nminus(x, x)
              x { True } = nminus(x, 0)
              x { True } = nplus(x, 0)
              0#1 { True } = rminus(x, x)
              x { True } = rminus(x, 0#1)
              x { True } = rplus(x, 0#1)
              DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
              Rules:
                P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
              KB Rewriting f_Top.ble(x, y) 1 1
                term f_Top.ble(x, y)
                env_term f_Top.beq(x, y)
                env_op_term f_Top.beq(x, y)
                cond_term f_Top.beq(x, y)
                cond_term f_Top.beq(x, y)
                exp_term f_Top.ble(x, y)
                all_term f_Top.ble(x, y)
                all_term f_Top.beq(x, y)
                all_term f_Top.beq(x, y)
                cond_term2 f_Top.beq(x, y)
                cond_term2 f_Top.beq(x, y)
                Operator ETO f_Top.ble f_Top.beq
                cond_term f_Top.beq(x, y)
                cond_term f_Top.beq(x, y)
                terms f_Top.ble(x, y)
                elaborate term = f_Top.beq(<<1>>, <<4>>)
                elaborate term = f_Top.beq(<<1>>, <<4>>)
                elaborate term2 = f_Top.beq(<<1>>, <<4>>)
                elaborate term2 = f_Top.beq(<<1>>, <<4>>)
                    terms transitive f_Top.beq(<<1>>, <<4>>)
                    terms transitive f_Top.beq(<<1>>, <<4>>)
                    new_transitive_input f_Top.beq(<<1>>, <<4>>)
                    new_transitive_input f_Top.beq(<<1>>, <<4>>)
                    new_transitive term f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    a f_Top.beq(<<4>>, <<4>>)
                    a f_Top.beq(<<1>>, <<1>>)
                ta1 count = 3
                    ta1 = f_Top.beq(<<1>>, <<1>>)
                    ta1 = f_Top.beq(<<1>>, <<4>>)
                    ta1 = f_Top.beq(<<4>>, <<4>>)
                    t2 = f_Top.beq(<<1>>, <<1>>)
                    t2 = f_Top.beq(<<1>>, <<4>>)
                    t2 = f_Top.beq(<<4>>, <<4>>)
                    new_transitive_input f_Top.beq(<<4>>, <<4>>)
                    new_transitive_input f_Top.beq(<<1>>, <<1>>)
                    new_transitive term f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                Elaboration
                    t = f_Top.beq(<<1>>, <<1>>)

                    t = f_Top.beq(<<1>>, <<4>>)

                    t = f_Top.beq(<<4>>, <<4>>)

                elaborate term = f_Top.ble(<<4>>, <<1>>)
                elaborate term = f_Top.beq(<<1>>, <<4>>)
                elaborate term = f_Top.beq(<<1>>, <<4>>)
                elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                elaborate term2 = f_Top.beq(<<1>>, <<4>>)
                elaborate term2 = f_Top.beq(<<1>>, <<4>>)
                    terms transitive f_Top.ble(<<4>>, <<1>>)
                    terms transitive f_Top.beq(<<1>>, <<4>>)
                    terms transitive f_Top.beq(<<1>>, <<4>>)
                    new_transitive_input f_Top.ble(<<4>>, <<1>>)
                    new_transitive_input f_Top.beq(<<1>>, <<4>>)
                    new_transitive_input f_Top.beq(<<1>>, <<4>>)
                    new_transitive term f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    a f_Top.beq(<<4>>, <<4>>)
                    a f_Top.beq(<<1>>, <<1>>)
                    a f_Top.ble(<<1>>, <<1>>)
                    a f_Top.ble(<<4>>, <<4>>)
                ta1 count = 5
                    ta1 = f_Top.ble(<<1>>, <<1>>)
                    ta1 = f_Top.beq(<<1>>, <<1>>)
                    ta1 = f_Top.beq(<<1>>, <<4>>)
                    ta1 = f_Top.ble(<<4>>, <<4>>)
                    ta1 = f_Top.beq(<<4>>, <<4>>)
                    t2 = f_Top.beq(<<1>>, <<1>>)
                    t2 = f_Top.beq(<<1>>, <<4>>)
                    t2 = f_Top.beq(<<4>>, <<4>>)
                    new_transitive_input f_Top.beq(<<4>>, <<4>>)
                    new_transitive_input f_Top.beq(<<1>>, <<1>>)
                    new_transitive_input f_Top.ble(<<1>>, <<1>>)
                    new_transitive_input f_Top.ble(<<4>>, <<4>>)
                    new_transitive term f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.ble(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<1>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.ble(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term f_Top.ble(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                    new_transitive t f_Top.beq(<<4>>, <<4>>)
                    new_transitive t f_Top.beq(<<1>>, <<4>>)
                closure_terms f_Top.ble(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<4>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<1>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.beq(<<1>>, <<4>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<1>>)
                    b f_Top.ble(<<1>>, <<4>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<1>>, <<1>>)
                    b f_Top.ble(<<4>>, <<1>>)
                    b f_Top.ble(<<1>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<1>>, <<4>>)
                    b f_Top.ble(<<4>>, <<1>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<4>>, <<4>>)
                    b f_Top.ble(<<1>>, <<4>>)
                    b f_Top.ble(<<4>>, <<1>>)
                Elaboration
                    t = f_Top.beq(<<1>>, <<1>>)

                    t = f_Top.beq(<<1>>, <<4>>)

                    t = f_Top.beq(<<4>>, <<4>>)

                results1 f_Top.beq(<<1>>, <<1>>)
                results1 f_Top.beq(<<1>>, <<4>>)
                results1 f_Top.beq(<<4>>, <<4>>)
                results2 f_Top.beq(<<1>>, <<1>>)
                results2 f_Top.beq(<<1>>, <<4>>)
                results2 f_Top.beq(<<4>>, <<4>>)
                Default case
                Results: f_Top.ble(x, y)
                  True
              comparing True f_Top.ble(x, y)
              rewriting expression2: True
                builtin True
                end builtin True
                rless(x, rplus(x, 1#1)) { True } -> True
                rless(0#1, rplus(1#1, x)) { True } -> True
                rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
                rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
                rless(x, x) { True } -> False
                rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
                rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
                rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
                rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
                rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
                rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
                rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
                rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
                rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
                rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
                rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
                rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
                rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
                rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
                rminus(x, x) { True } -> 0#1
                rminus(x, 0#1) { True } -> x
                rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
                rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
                rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
                rplus(x, 0#1) { True } = x
                nless(x, nplus(x, 1)) { True } -> True
                nless(0, nplus(1, x)) { True } -> True
                nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
                nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
                nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
                nless(x, x) { True } -> False
                nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
                nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
                nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
                nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
                nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
                nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
                ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
                nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
                nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
                nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
                nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
                nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
                nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
                nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
                nminus(x, x) { True } -> 0
                nminus(x, 0) { True } -> x
                nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
                nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
                nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
                nplus(x, 0) { True } = x
                nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
                preceq(0, y) { True } -> True
                nminus(x, y) == z { True } = x == nplus(y, z)
                x == nplus(y, z) { True } = nminus(x, y) == z
                x == y { nless(x, y) } = False
                x == nplus(x, 1) { True } -> False
                nplus(x, y) == nplus(x, z) { True } -> y == z
                y == z { True } = nplus(x, y) == nplus(x, z)
                nminus(x, a) == b { True } -> x == nplus(a, b)
                x == nplus(a, b) { True } = nminus(x, a) == b
                ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
                y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
                rminus(x, y) == z { True } = x == rplus(y, z)
                x == rplus(y, z) { True } = rminus(x, y) == z
                x == y { rless(x, y) } = False
                x == rplus(x, 1#1) { True } -> False
                rplus(x, y) == rplus(x, z) { True } -> y == z
                y == z { True } = rplus(x, y) == rplus(x, z)
                rminus(x, a) == b { True } -> x == rplus(a, b)
                x == rplus(a, b) { True } = rminus(x, a) == b
                rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
                y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
                nless(x, y) | nless(y, x) | x  == y { True } -> True
                rless(x, y) | rless(y, x) | x  == y { True } -> True
                nless(x, y) & nless(y, x) { True } -> False
                x  == y & nless(y, x) { True } -> False
                rless(x, y) & rless(y, x) { True } -> False
                x  == y & rless(y, x) { True } -> False
                False { nless(x, y) } = x == y
                False { True } = nless(x, y) & nless(y, x)
                False { True } = nless(x, y) & y  == x
                False { True } = x == nplus(x, 1)
                False { True } = nless(x, x)
                False { rless(x, y) } = x == y
                False { True } = rless(x, y) & rless(y, x)
                False { True } = rless(x, y) & y  == x
                False { True } = x == rplus(x, 1#1)
                False { True } = rless(x, x)
                True { True } = nless(x, nplus(x, 1))
                True { True } = preceq(0, y)
                True { True } = nless(0, nplus(1, x))
                True { True } = nless(x, y) | nless(y, x) | x  == y
                True { True } = nless(nplus(a, 1), b)
                True { True } = rless(x, rplus(x, 1#1))
                True { True } = rless(0, rplus(1#1, x))
                True { True } = rless(x, y) | rless(y, x) | x  == y
                0 { True } = nminus(x, x)
                x { True } = nminus(x, 0)
                x { True } = nplus(x, 0)
                0#1 { True } = rminus(x, x)
                x { True } = rminus(x, 0#1)
                x { True } = rplus(x, 0#1)
                DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Rules:
                  P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Result:
                  <<19>>
              end rewrite for: True
              Result:
                <<19>>
                True
            end rewrite for: f_Top.ble(<<4>>, <<1>>)
            KB Rewriting not(f_Top.ble(<<4>>, <<1>>)) 1 1
              term not(f_Top.ble(<<4>>, <<1>>))
              env_term f_Top.beq(x, y)
              env_op_term f_Top.beq(x, y)
              cond_term f_Top.beq(x, y)
              cond_term f_Top.beq(x, y)
              exp_term not(f_Top.ble(<<4>>, <<1>>))
              all_term not(f_Top.ble(<<4>>, <<1>>))
              all_term f_Top.beq(x, y)
              all_term f_Top.beq(x, y)
              cond_term2 f_Top.beq(x, y)
              cond_term2 f_Top.beq(x, y)
              Operator ETO f_Top.ble f_Top.beq
              cond_term f_Top.beq(x, y)
              cond_term f_Top.beq(x, y)
              terms not(f_Top.ble(<<4>>, <<1>>))
              elaborate term = f_Top.beq(<<1>>, <<4>>)
              elaborate term = f_Top.beq(<<1>>, <<4>>)
              elaborate term2 = f_Top.beq(<<1>>, <<4>>)
              elaborate term2 = f_Top.beq(<<1>>, <<4>>)
                  terms transitive f_Top.beq(<<1>>, <<4>>)
                  terms transitive f_Top.beq(<<1>>, <<4>>)
                  new_transitive_input f_Top.beq(<<1>>, <<4>>)
                  new_transitive_input f_Top.beq(<<1>>, <<4>>)
                  new_transitive term f_Top.beq(<<1>>, <<4>>)
                  new_transitive t f_Top.beq(<<1>>, <<4>>)
                  new_transitive t f_Top.beq(<<1>>, <<4>>)
              closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term f_Top.beq(<<1>>, <<4>>)
                  new_transitive t f_Top.beq(<<1>>, <<4>>)
                  new_transitive t f_Top.beq(<<1>>, <<4>>)
              closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.beq(<<1>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
                  Cycle
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  a f_Top.beq(<<4>>, <<4>>)
                  a f_Top.beq(<<1>>, <<1>>)
              ta1 count = 3
                  ta1 = f_Top.beq(<<1>>, <<1>>)
                  ta1 = f_Top.beq(<<1>>, <<4>>)
                  ta1 = f_Top.beq(<<4>>, <<4>>)
                  t2 = f_Top.beq(<<1>>, <<1>>)
                  t2 = f_Top.beq(<<1>>, <<4>>)
                  t2 = f_Top.beq(<<4>>, <<4>>)
                  new_transitive_input f_Top.beq(<<4>>, <<4>>)
                  new_transitive_input f_Top.beq(<<1>>, <<1>>)
                  new_transitive term f_Top.beq(<<4>>, <<4>>)
                  new_transitive t f_Top.beq(<<4>>, <<4>>)
                  new_transitive t f_Top.beq(<<1>>, <<4>>)
                  new_transitive t f_Top.beq(<<4>>, <<4>>)
                  new_transitive t f_Top.beq(<<1>>, <<4>>)
              closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<1>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.beq(<<4>>, <<4>>) f_Top.beq(<<4>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term f_Top.beq(<<1>>, <<1>>)
                  new_transitive t f_Top.beq(<<1>>, <<1>>)
                  new_transitive t f_Top.beq(<<1>>, <<4>>)
                  new_transitive t f_Top.beq(<<1>>, <<1>>)
                  new_transitive t f_Top.beq(<<1>>, <<4>>)
              closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<4>>)
              oper ETO f_Top.ble f_Top.beq
              closure_terms f_Top.beq(<<1>>, <<1>>) f_Top.beq(<<1>>, <<1>>)
              oper ETO f_Top.ble f_Top.beq
                  Cycle
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<1>>, <<4>>)
                  b f_Top.beq(<<1>>, <<4>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<4>>, <<4>>)
                  b f_Top.beq(<<1>>, <<4>>)
                  b f_Top.beq(<<1>>, <<4>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<1>>, <<4>>)
                  b f_Top.beq(<<1>>, <<4>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<1>>, <<1>>)
                  b f_Top.beq(<<1>>, <<4>>)
                  b f_Top.beq(<<1>>, <<4>>)
              Elaboration
                  t = f_Top.beq(<<1>>, <<1>>)

                  t = f_Top.beq(<<1>>, <<4>>)

                  t = f_Top.beq(<<4>>, <<4>>)

              elaborate term = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term = f_Top.beq(<<1>>, <<4>>)
              elaborate term = f_Top.beq(<<1>>, <<4>>)
              elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term2 = f_Top.beq(<<1>>, <<4>>)
              elaborate term2 = f_Top.beq(<<1>>, <<4>>)
                  terms transitive not(f_Top.ble(<<4>>, <<1>>))
                  terms transitive f_Top.beq(<<1>>, <<4>>)
                  terms transitive f_Top.beq(<<1>>, <<4>>)
                  new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive_input f_Top.beq(<<1>>, <<4>>)
                  new_transitive_input f_Top.beq(<<1>>, <<4>>)
                  new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive term f_Top.beq(<<1>>, <<4>>)
                  new_transitive term f_Top.beq(<<1>>, <<4>>)
                  Cycle
              Elaboration
                  t = False

              results1 f_Top.beq(<<1>>, <<1>>)
              results1 f_Top.beq(<<1>>, <<4>>)
              results1 f_Top.beq(<<4>>, <<4>>)
              results2 False
              False case
              Results: not(f_Top.ble(<<4>>, <<1>>))
                False
            comparing False not(f_Top.ble(<<4>>, <<1>>))
            builtin False
            end builtin False
            rless(x, rplus(x, 1#1)) { True } -> True
            rless(0#1, rplus(1#1, x)) { True } -> True
            rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
            rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
            rless(x, x) { True } -> False
            rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
            rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
            rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
            rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
            rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
            rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
            rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
            rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
            rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
            rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
            rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
            rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
            rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
            rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
            rminus(x, x) { True } -> 0#1
            rminus(x, 0#1) { True } -> x
            rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
            rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
            rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
            rplus(x, 0#1) { True } = x
            nless(x, nplus(x, 1)) { True } -> True
            nless(0, nplus(1, x)) { True } -> True
            nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
            nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
            nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
            nless(x, x) { True } -> False
            nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
            nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
            nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
            nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
            nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
            nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
            ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
            nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
            nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
            nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
            nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
            nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
            nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
            nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
            nminus(x, x) { True } -> 0
            nminus(x, 0) { True } -> x
            nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
            nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
            nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
            nplus(x, 0) { True } = x
            nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
            preceq(0, y) { True } -> True
            nminus(x, y) == z { True } = x == nplus(y, z)
            x == nplus(y, z) { True } = nminus(x, y) == z
            x == y { nless(x, y) } = False
            x == nplus(x, 1) { True } -> False
            nplus(x, y) == nplus(x, z) { True } -> y == z
            y == z { True } = nplus(x, y) == nplus(x, z)
            nminus(x, a) == b { True } -> x == nplus(a, b)
            x == nplus(a, b) { True } = nminus(x, a) == b
            ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
            y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
            rminus(x, y) == z { True } = x == rplus(y, z)
            x == rplus(y, z) { True } = rminus(x, y) == z
            x == y { rless(x, y) } = False
            x == rplus(x, 1#1) { True } -> False
            rplus(x, y) == rplus(x, z) { True } -> y == z
            y == z { True } = rplus(x, y) == rplus(x, z)
            rminus(x, a) == b { True } -> x == rplus(a, b)
            x == rplus(a, b) { True } = rminus(x, a) == b
            rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
            y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
            nless(x, y) | nless(y, x) | x  == y { True } -> True
            rless(x, y) | rless(y, x) | x  == y { True } -> True
            nless(x, y) & nless(y, x) { True } -> False
            x  == y & nless(y, x) { True } -> False
            rless(x, y) & rless(y, x) { True } -> False
            x  == y & rless(y, x) { True } -> False
            False { nless(x, y) } = x == y
            False { True } = nless(x, y) & nless(y, x)
            False { True } = nless(x, y) & y  == x
            False { True } = x == nplus(x, 1)
            False { True } = nless(x, x)
            False { rless(x, y) } = x == y
            False { True } = rless(x, y) & rless(y, x)
            False { True } = rless(x, y) & y  == x
            False { True } = x == rplus(x, 1#1)
            False { True } = rless(x, x)
            True { True } = nless(x, nplus(x, 1))
            True { True } = preceq(0, y)
            True { True } = nless(0, nplus(1, x))
            True { True } = nless(x, y) | nless(y, x) | x  == y
            True { True } = nless(nplus(a, 1), b)
            True { True } = rless(x, rplus(x, 1#1))
            True { True } = rless(0, rplus(1#1, x))
            True { True } = rless(x, y) | rless(y, x) | x  == y
            0 { True } = nminus(x, x)
            x { True } = nminus(x, 0)
            x { True } = nplus(x, 0)
            0#1 { True } = rminus(x, x)
            x { True } = rminus(x, 0#1)
            x { True } = rplus(x, 0#1)
            DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Rules:
              P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Result:
              <<51>>
              False
          end rewrite for: not(<<259>>)
          equal <<51>> not(<<259>>)
          equal: No
          Deriving False { True } -> False
            d False { N[True] } -> N[False]
            Result:
          end derive for: False { True } -> False
          rewriting expression1: <<258>>
            Result:
              <<258>>
              not(f_Top.beq(y, x))
          end rewrite for: <<258>>
          equal <<258>> <<258>>
          equal: Yes
          rewriting expression1: <<51>>
            builtin False
            end builtin False
            rless(x, rplus(x, 1#1)) { True } -> True
            rless(0#1, rplus(1#1, x)) { True } -> True
            rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
            rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
            rless(x, x) { True } -> False
            rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
            rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
            rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
            rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
            rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
            rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
            rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
            rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
            rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
            rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
            rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
            rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
            rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
            rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
            rminus(x, x) { True } -> 0#1
            rminus(x, 0#1) { True } -> x
            rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
            rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
            rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
            rplus(x, 0#1) { True } = x
            nless(x, nplus(x, 1)) { True } -> True
            nless(0, nplus(1, x)) { True } -> True
            nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
            nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
            nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
            nless(x, x) { True } -> False
            nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
            nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
            nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
            nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
            nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
            nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
            ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
            nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
            nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
            nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
            nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
            nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
            nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
            nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
            nminus(x, x) { True } -> 0
            nminus(x, 0) { True } -> x
            nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
            nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
            nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
            nplus(x, 0) { True } = x
            nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
            preceq(0, y) { True } -> True
            nminus(x, y) == z { True } = x == nplus(y, z)
            x == nplus(y, z) { True } = nminus(x, y) == z
            x == y { nless(x, y) } = False
            x == nplus(x, 1) { True } -> False
            nplus(x, y) == nplus(x, z) { True } -> y == z
            y == z { True } = nplus(x, y) == nplus(x, z)
            nminus(x, a) == b { True } -> x == nplus(a, b)
            x == nplus(a, b) { True } = nminus(x, a) == b
            ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
            y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
            rminus(x, y) == z { True } = x == rplus(y, z)
            x == rplus(y, z) { True } = rminus(x, y) == z
            x == y { rless(x, y) } = False
            x == rplus(x, 1#1) { True } -> False
            rplus(x, y) == rplus(x, z) { True } -> y == z
            y == z { True } = rplus(x, y) == rplus(x, z)
            rminus(x, a) == b { True } -> x == rplus(a, b)
            x == rplus(a, b) { True } = rminus(x, a) == b
            rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
            y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
            nless(x, y) | nless(y, x) | x  == y { True } -> True
            rless(x, y) | rless(y, x) | x  == y { True } -> True
            nless(x, y) & nless(y, x) { True } -> False
            x  == y & nless(y, x) { True } -> False
            rless(x, y) & rless(y, x) { True } -> False
            x  == y & rless(y, x) { True } -> False
            False { nless(x, y) } = x == y
            False { True } = nless(x, y) & nless(y, x)
            False { True } = nless(x, y) & y  == x
            False { True } = x == nplus(x, 1)
            False { True } = nless(x, x)
            False { rless(x, y) } = x == y
            False { True } = rless(x, y) & rless(y, x)
            False { True } = rless(x, y) & y  == x
            False { True } = x == rplus(x, 1#1)
            False { True } = rless(x, x)
            True { True } = nless(x, nplus(x, 1))
            True { True } = preceq(0, y)
            True { True } = nless(0, nplus(1, x))
            True { True } = nless(x, y) | nless(y, x) | x  == y
            True { True } = nless(nplus(a, 1), b)
            True { True } = rless(x, rplus(x, 1#1))
            True { True } = rless(0, rplus(1#1, x))
            True { True } = rless(x, y) | rless(y, x) | x  == y
            0 { True } = nminus(x, x)
            x { True } = nminus(x, 0)
            x { True } = nplus(x, 0)
            0#1 { True } = rminus(x, x)
            x { True } = rminus(x, 0#1)
            x { True } = rplus(x, 0#1)
            DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Rules:
              P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Result:
              <<51>>
              False
          end rewrite for: <<51>>
          equal <<51>> <<51>>
          equal: Yes
          builtin not(f_Top.beq(y, x)) | False
            |(N[not(<<257>>)])
          end builtin |(N[not(<<257>>)])
          rewriting expression1: |(N[not(<<257>>)])
            rewriting expression1: <<258>>
              Result:
                <<258>>
                not(f_Top.beq(y, x))
            end rewrite for: <<258>>
            Result:
              <<258>>
              not(f_Top.beq(y, x))
          end rewrite for: |(N[not(<<257>>)])
          Result:
            <<258>>
            not(f_Top.beq(y, x))
        end rewrite for: <<258>> | <<260>>
        builtin <<19>> == <<258>>
          not(<<257>>)
        end builtin not(<<257>>)
        rewriting expression1: not(<<257>>)
          Result:
            <<258>>
            not(f_Top.beq(y, x))
        end rewrite for: not(<<257>>)
        Result:
          <<258>>
          not(f_Top.beq(y, x))
      end rewrite for: <<19>> == <<261>>
      rewriting expression1: True
        Result:
          <<19>>
          True
      end rewrite for: True
      builtin ALL(y:C_Coq.Init.Datatypes.nat: <<19>>) <<258>>
      end builtin ALL(y:C_Coq.Init.Datatypes.nat: True) not(<<257>>)
      rless(x, rplus(x, 1#1)) { True } -> True
      rless(0#1, rplus(1#1, x)) { True } -> True
      rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
      rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
      rless(x, x) { True } -> False
      rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
      rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
      rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
      rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
      rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
      rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
      rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
      rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
      rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
      rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
      rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
      rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
      rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
      rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
      rminus(x, x) { True } -> 0#1
      rminus(x, 0#1) { True } -> x
      rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
      rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
      rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
      rplus(x, 0#1) { True } = x
      nless(x, nplus(x, 1)) { True } -> True
      nless(0, nplus(1, x)) { True } -> True
      nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
      nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
      nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
      nless(x, x) { True } -> False
      nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
      nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
      nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
      nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
      nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
      nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
      ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
      nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
      nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
      nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
      nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
      nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
      nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
      nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
      nminus(x, x) { True } -> 0
      nminus(x, 0) { True } -> x
      nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
      nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
      nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
      nplus(x, 0) { True } = x
      nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
      preceq(0, y) { True } -> True
      nminus(x, y) == z { True } = x == nplus(y, z)
      x == nplus(y, z) { True } = nminus(x, y) == z
      x == y { nless(x, y) } = False
      x == nplus(x, 1) { True } -> False
      nplus(x, y) == nplus(x, z) { True } -> y == z
      y == z { True } = nplus(x, y) == nplus(x, z)
      nminus(x, a) == b { True } -> x == nplus(a, b)
      x == nplus(a, b) { True } = nminus(x, a) == b
      ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
      y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
      rminus(x, y) == z { True } = x == rplus(y, z)
      x == rplus(y, z) { True } = rminus(x, y) == z
      x == y { rless(x, y) } = False
      x == rplus(x, 1#1) { True } -> False
      rplus(x, y) == rplus(x, z) { True } -> y == z
      y == z { True } = rplus(x, y) == rplus(x, z)
      rminus(x, a) == b { True } -> x == rplus(a, b)
      x == rplus(a, b) { True } = rminus(x, a) == b
      rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
      y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
      nless(x, y) | nless(y, x) | x  == y { True } -> True
      rless(x, y) | rless(y, x) | x  == y { True } -> True
      nless(x, y) & nless(y, x) { True } -> False
      x  == y & nless(y, x) { True } -> False
      rless(x, y) & rless(y, x) { True } -> False
      x  == y & rless(y, x) { True } -> False
      False { nless(x, y) } = x == y
      False { True } = nless(x, y) & nless(y, x)
      False { True } = nless(x, y) & y  == x
      False { True } = x == nplus(x, 1)
      False { True } = nless(x, x)
      False { rless(x, y) } = x == y
      False { True } = rless(x, y) & rless(y, x)
      False { True } = rless(x, y) & y  == x
      False { True } = x == rplus(x, 1#1)
      False { True } = rless(x, x)
      True { True } = nless(x, nplus(x, 1))
      True { True } = preceq(0, y)
      True { True } = nless(0, nplus(1, x))
      True { True } = nless(x, y) | nless(y, x) | x  == y
      True { True } = nless(nplus(a, 1), b)
      True { True } = rless(x, rplus(x, 1#1))
      True { True } = rless(0, rplus(1#1, x))
      True { True } = rless(x, y) | rless(y, x) | x  == y
      0 { True } = nminus(x, x)
      x { True } = nminus(x, 0)
      x { True } = nplus(x, 0)
      0#1 { True } = rminus(x, x)
      x { True } = rminus(x, 0#1)
      x { True } = rplus(x, 0#1)
      DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
      Rules:
        P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
      Result:
        <<286>>
        ALL(y:C_Coq.Init.Datatypes.nat: True) not(f_Top.beq(y, x))
    end rewrite for: ALL(y:C_Coq.Init.Datatypes.nat: <<19>>) <<262>>
    rewriting expression1: True
      Result:
        <<19>>
        True
    end rewrite for: True
    builtin ALL(x:C_Coq.Init.Datatypes.nat: <<19>>) <<286>>
    end builtin ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: <<19>>) <<258>>
    rless(x, rplus(x, 1#1)) { True } -> True
    rless(0#1, rplus(1#1, x)) { True } -> True
    rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
    rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
    rless(x, x) { True } -> False
    rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
    rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
    rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
    rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
    rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
    rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
    rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
    rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
    rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
    rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
    rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
    rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
    rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
    rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
    rminus(x, x) { True } -> 0#1
    rminus(x, 0#1) { True } -> x
    rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
    rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
    rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
    rplus(x, 0#1) { True } = x
    nless(x, nplus(x, 1)) { True } -> True
    nless(0, nplus(1, x)) { True } -> True
    nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
    nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
    nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
    nless(x, x) { True } -> False
    nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
    nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
    nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
    nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
    nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
    nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
    ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
    nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
    nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
    nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
    nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
    nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
    nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
    nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
    nminus(x, x) { True } -> 0
    nminus(x, 0) { True } -> x
    nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
    nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
    nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
    nplus(x, 0) { True } = x
    nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
    preceq(0, y) { True } -> True
    nminus(x, y) == z { True } = x == nplus(y, z)
    x == nplus(y, z) { True } = nminus(x, y) == z
    x == y { nless(x, y) } = False
    x == nplus(x, 1) { True } -> False
    nplus(x, y) == nplus(x, z) { True } -> y == z
    y == z { True } = nplus(x, y) == nplus(x, z)
    nminus(x, a) == b { True } -> x == nplus(a, b)
    x == nplus(a, b) { True } = nminus(x, a) == b
    ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
    y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
    rminus(x, y) == z { True } = x == rplus(y, z)
    x == rplus(y, z) { True } = rminus(x, y) == z
    x == y { rless(x, y) } = False
    x == rplus(x, 1#1) { True } -> False
    rplus(x, y) == rplus(x, z) { True } -> y == z
    y == z { True } = rplus(x, y) == rplus(x, z)
    rminus(x, a) == b { True } -> x == rplus(a, b)
    x == rplus(a, b) { True } = rminus(x, a) == b
    rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
    y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
    nless(x, y) | nless(y, x) | x  == y { True } -> True
    rless(x, y) | rless(y, x) | x  == y { True } -> True
    nless(x, y) & nless(y, x) { True } -> False
    x  == y & nless(y, x) { True } -> False
    rless(x, y) & rless(y, x) { True } -> False
    x  == y & rless(y, x) { True } -> False
    False { nless(x, y) } = x == y
    False { True } = nless(x, y) & nless(y, x)
    False { True } = nless(x, y) & y  == x
    False { True } = x == nplus(x, 1)
    False { True } = nless(x, x)
    False { rless(x, y) } = x == y
    False { True } = rless(x, y) & rless(y, x)
    False { True } = rless(x, y) & y  == x
    False { True } = x == rplus(x, 1#1)
    False { True } = rless(x, x)
    True { True } = nless(x, nplus(x, 1))
    True { True } = preceq(0, y)
    True { True } = nless(0, nplus(1, x))
    True { True } = nless(x, y) | nless(y, x) | x  == y
    True { True } = nless(nplus(a, 1), b)
    True { True } = rless(x, rplus(x, 1#1))
    True { True } = rless(0, rplus(1#1, x))
    True { True } = rless(x, y) | rless(y, x) | x  == y
    0 { True } = nminus(x, x)
    x { True } = nminus(x, 0)
    x { True } = nplus(x, 0)
    0#1 { True } = rminus(x, x)
    x { True } = rminus(x, 0#1)
    x { True } = rplus(x, 0#1)
    DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
    Rules:
      P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
    Result:
      <<287>>
      ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) not(f_Top.beq(y, x))
  end rewrite for: ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) (not(f_Top.beq(x, y))  | not(f_Top.ble(x, y))) == True
  Result:
    <<287>>
    ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) not(f_Top.beq(y, x))
end rewrite subterm: ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) (not(f_Top.beq(x, y))  | not(f_Top.ble(x, y))) == True
rewriting subterm: ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) (not(f_Top.beq(x, y))  & not(f_Top.ble(x, y))) == True
  rewriting expression1: ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) (not(f_Top.beq(x, y))  & not(f_Top.ble(x, y))) == True
    rewriting expression1: ALL(y:C_Coq.Init.Datatypes.nat: <<19>>) <<289>>
      rewriting expression1: <<19>> == <<288>>
        rewriting expression1: True
          Result:
            <<19>>
            True
        end rewrite for: True
        rewriting expression1: <<258>> & <<260>>
          Deriving not(f_Top.ble(x', y')) { True } -> True
            d not(f_Top.ble(x', y')) { N[True] } -> N[True]
            d f_Top.ble(x', y') { N[True] } -> not(N[True])
            Result:
              N[f_Top.ble(x', y')] { N[True] } -> not(N[True])
          end derive for: not(f_Top.ble(x', y')) { True } -> True
          Deriving not(f_Top.beq(x', y')) { True } -> True
            d not(f_Top.beq(x', y')) { N[True] } -> N[True]
            d f_Top.beq(x', y') { N[True] } -> not(N[True])
            Result:
              N[f_Top.beq(x', y')] { N[True] } -> not(N[True])
          end derive for: not(f_Top.beq(x', y')) { True } -> True
          rewriting expression1: not(<<257>>)
            rewriting expression1: f_Top.beq(<<1>>, <<4>>)
              rewriting expression1: y
                builtin y
                end builtin y
                rless(x, rplus(x, 1#1)) { True } -> True
                rless(0#1, rplus(1#1, x)) { True } -> True
                rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
                rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
                rless(x, x) { True } -> False
                rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
                rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
                rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
                rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
                rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
                rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
                rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
                rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
                rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
                rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
                rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
                rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
                rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
                rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
                rminus(x, x) { True } -> 0#1
                rminus(x, 0#1) { True } -> x
                rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
                rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
                rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
                rplus(x, 0#1) { True } = x
                nless(x, nplus(x, 1)) { True } -> True
                nless(0, nplus(1, x)) { True } -> True
                nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
                nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
                nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
                nless(x, x) { True } -> False
                nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
                nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
                nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
                nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
                nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
                nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
                ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
                nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
                nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
                nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
                nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
                nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
                nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
                nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
                nminus(x, x) { True } -> 0
                nminus(x, 0) { True } -> x
                nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
                nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
                nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
                nplus(x, 0) { True } = x
                nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
                preceq(0, y) { True } -> True
                nminus(x, y) == z { True } = x == nplus(y, z)
                x == nplus(y, z) { True } = nminus(x, y) == z
                x == y { nless(x, y) } = False
                x == nplus(x, 1) { True } -> False
                nplus(x, y) == nplus(x, z) { True } -> y == z
                y == z { True } = nplus(x, y) == nplus(x, z)
                nminus(x, a) == b { True } -> x == nplus(a, b)
                x == nplus(a, b) { True } = nminus(x, a) == b
                ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
                y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
                rminus(x, y) == z { True } = x == rplus(y, z)
                x == rplus(y, z) { True } = rminus(x, y) == z
                x == y { rless(x, y) } = False
                x == rplus(x, 1#1) { True } -> False
                rplus(x, y) == rplus(x, z) { True } -> y == z
                y == z { True } = rplus(x, y) == rplus(x, z)
                rminus(x, a) == b { True } -> x == rplus(a, b)
                x == rplus(a, b) { True } = rminus(x, a) == b
                rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
                y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
                nless(x, y) | nless(y, x) | x  == y { True } -> True
                rless(x, y) | rless(y, x) | x  == y { True } -> True
                nless(x, y) & nless(y, x) { True } -> False
                x  == y & nless(y, x) { True } -> False
                rless(x, y) & rless(y, x) { True } -> False
                x  == y & rless(y, x) { True } -> False
                False { nless(x, y) } = x == y
                False { True } = nless(x, y) & nless(y, x)
                False { True } = nless(x, y) & y  == x
                False { True } = x == nplus(x, 1)
                False { True } = nless(x, x)
                False { rless(x, y) } = x == y
                False { True } = rless(x, y) & rless(y, x)
                False { True } = rless(x, y) & y  == x
                False { True } = x == rplus(x, 1#1)
                False { True } = rless(x, x)
                True { True } = nless(x, nplus(x, 1))
                True { True } = preceq(0, y)
                True { True } = nless(0, nplus(1, x))
                True { True } = nless(x, y) | nless(y, x) | x  == y
                True { True } = nless(nplus(a, 1), b)
                True { True } = rless(x, rplus(x, 1#1))
                True { True } = rless(0, rplus(1#1, x))
                True { True } = rless(x, y) | rless(y, x) | x  == y
                0 { True } = nminus(x, x)
                x { True } = nminus(x, 0)
                x { True } = nplus(x, 0)
                0#1 { True } = rminus(x, x)
                x { True } = rminus(x, 0#1)
                x { True } = rplus(x, 0#1)
                DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Rules:
                  P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Result:
                  <<1>>
                  y
              end rewrite for: y
              rewriting expression1: x
                builtin x
                end builtin x
                rless(x, rplus(x, 1#1)) { True } -> True
                rless(0#1, rplus(1#1, x)) { True } -> True
                rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
                rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
                rless(x, x) { True } -> False
                rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
                rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
                rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
                rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
                rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
                rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
                rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
                rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
                rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
                rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
                rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
                rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
                rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
                rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
                rminus(x, x) { True } -> 0#1
                rminus(x, 0#1) { True } -> x
                rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
                rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
                rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
                rplus(x, 0#1) { True } = x
                nless(x, nplus(x, 1)) { True } -> True
                nless(0, nplus(1, x)) { True } -> True
                nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
                nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
                nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
                nless(x, x) { True } -> False
                nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
                nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
                nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
                nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
                nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
                nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
                ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
                nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
                nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
                nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
                nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
                nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
                nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
                nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
                nminus(x, x) { True } -> 0
                nminus(x, 0) { True } -> x
                nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
                nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
                nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
                nplus(x, 0) { True } = x
                nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
                preceq(0, y) { True } -> True
                nminus(x, y) == z { True } = x == nplus(y, z)
                x == nplus(y, z) { True } = nminus(x, y) == z
                x == y { nless(x, y) } = False
                x == nplus(x, 1) { True } -> False
                nplus(x, y) == nplus(x, z) { True } -> y == z
                y == z { True } = nplus(x, y) == nplus(x, z)
                nminus(x, a) == b { True } -> x == nplus(a, b)
                x == nplus(a, b) { True } = nminus(x, a) == b
                ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
                y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
                rminus(x, y) == z { True } = x == rplus(y, z)
                x == rplus(y, z) { True } = rminus(x, y) == z
                x == y { rless(x, y) } = False
                x == rplus(x, 1#1) { True } -> False
                rplus(x, y) == rplus(x, z) { True } -> y == z
                y == z { True } = rplus(x, y) == rplus(x, z)
                rminus(x, a) == b { True } -> x == rplus(a, b)
                x == rplus(a, b) { True } = rminus(x, a) == b
                rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
                y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
                nless(x, y) | nless(y, x) | x  == y { True } -> True
                rless(x, y) | rless(y, x) | x  == y { True } -> True
                nless(x, y) & nless(y, x) { True } -> False
                x  == y & nless(y, x) { True } -> False
                rless(x, y) & rless(y, x) { True } -> False
                x  == y & rless(y, x) { True } -> False
                False { nless(x, y) } = x == y
                False { True } = nless(x, y) & nless(y, x)
                False { True } = nless(x, y) & y  == x
                False { True } = x == nplus(x, 1)
                False { True } = nless(x, x)
                False { rless(x, y) } = x == y
                False { True } = rless(x, y) & rless(y, x)
                False { True } = rless(x, y) & y  == x
                False { True } = x == rplus(x, 1#1)
                False { True } = rless(x, x)
                True { True } = nless(x, nplus(x, 1))
                True { True } = preceq(0, y)
                True { True } = nless(0, nplus(1, x))
                True { True } = nless(x, y) | nless(y, x) | x  == y
                True { True } = nless(nplus(a, 1), b)
                True { True } = rless(x, rplus(x, 1#1))
                True { True } = rless(0, rplus(1#1, x))
                True { True } = rless(x, y) | rless(y, x) | x  == y
                0 { True } = nminus(x, x)
                x { True } = nminus(x, 0)
                x { True } = nplus(x, 0)
                0#1 { True } = rminus(x, x)
                x { True } = rminus(x, 0#1)
                x { True } = rplus(x, 0#1)
                DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Rules:
                  P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Result:
                  <<4>>
                  x
              end rewrite for: x
              builtin f_Top.beq(<<1>>, <<4>>)
              end builtin f_Top.beq(y, x)
              rless(x, rplus(x, 1#1)) { True } -> True
              rless(0#1, rplus(1#1, x)) { True } -> True
              rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
              rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
              rless(x, x) { True } -> False
              rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
              rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
              rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
              rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
              rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
              rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
              rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
              rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
              rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
              rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
              rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
              rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
              rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
              rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
              rminus(x, x) { True } -> 0#1
              rminus(x, 0#1) { True } -> x
              rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
              rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
              rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
              rplus(x, 0#1) { True } = x
              nless(x, nplus(x, 1)) { True } -> True
              nless(0, nplus(1, x)) { True } -> True
              nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
              nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
              nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
              nless(x, x) { True } -> False
              nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
              nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
              nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
              nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
              nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
              nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
              ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
              nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
              nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
              nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
              nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
              nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
              nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
              nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
              nminus(x, x) { True } -> 0
              nminus(x, 0) { True } -> x
              nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
              nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
              nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
              nplus(x, 0) { True } = x
              nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
              preceq(0, y) { True } -> True
              nminus(x, y) == z { True } = x == nplus(y, z)
              x == nplus(y, z) { True } = nminus(x, y) == z
              x == y { nless(x, y) } = False
              x == nplus(x, 1) { True } -> False
              nplus(x, y) == nplus(x, z) { True } -> y == z
              y == z { True } = nplus(x, y) == nplus(x, z)
              nminus(x, a) == b { True } -> x == nplus(a, b)
              x == nplus(a, b) { True } = nminus(x, a) == b
              ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
              y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
              rminus(x, y) == z { True } = x == rplus(y, z)
              x == rplus(y, z) { True } = rminus(x, y) == z
              x == y { rless(x, y) } = False
              x == rplus(x, 1#1) { True } -> False
              rplus(x, y) == rplus(x, z) { True } -> y == z
              y == z { True } = rplus(x, y) == rplus(x, z)
              rminus(x, a) == b { True } -> x == rplus(a, b)
              x == rplus(a, b) { True } = rminus(x, a) == b
              rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
              y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
              nless(x, y) | nless(y, x) | x  == y { True } -> True
              rless(x, y) | rless(y, x) | x  == y { True } -> True
              nless(x, y) & nless(y, x) { True } -> False
              x  == y & nless(y, x) { True } -> False
              rless(x, y) & rless(y, x) { True } -> False
              x  == y & rless(y, x) { True } -> False
              False { nless(x, y) } = x == y
              False { True } = nless(x, y) & nless(y, x)
              False { True } = nless(x, y) & y  == x
              False { True } = x == nplus(x, 1)
              False { True } = nless(x, x)
              False { rless(x, y) } = x == y
              False { True } = rless(x, y) & rless(y, x)
              False { True } = rless(x, y) & y  == x
              False { True } = x == rplus(x, 1#1)
              False { True } = rless(x, x)
              True { True } = nless(x, nplus(x, 1))
              True { True } = preceq(0, y)
              True { True } = nless(0, nplus(1, x))
              True { True } = nless(x, y) | nless(y, x) | x  == y
              True { True } = nless(nplus(a, 1), b)
              True { True } = rless(x, rplus(x, 1#1))
              True { True } = rless(0, rplus(1#1, x))
              True { True } = rless(x, y) | rless(y, x) | x  == y
              0 { True } = nminus(x, x)
              x { True } = nminus(x, 0)
              x { True } = nplus(x, 0)
              0#1 { True } = rminus(x, x)
              x { True } = rminus(x, 0#1)
              x { True } = rplus(x, 0#1)
              DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
              Rules:
                P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
              KB Rewriting f_Top.beq(y, x) 1 1
                term f_Top.beq(y, x)
                env_term not(f_Top.ble(x, y))
                env_op_term not(f_Top.ble(x, y))
                cond_term not(f_Top.ble(x, y))
                cond_term not(f_Top.ble(x, y))
                exp_term f_Top.beq(y, x)
                all_term f_Top.beq(y, x)
                all_term not(f_Top.ble(x, y))
                all_term not(f_Top.ble(x, y))
                cond_term2 not(f_Top.ble(x, y))
                cond_term2 not(f_Top.ble(x, y))
                Operator ETO f_Top.ble f_Top.beq
                cond_term not(f_Top.ble(x, y))
                cond_term not(f_Top.ble(x, y))
                terms f_Top.beq(y, x)
                elaborate term = not(f_Top.ble(<<4>>, <<1>>))
                elaborate term = not(f_Top.ble(<<4>>, <<1>>))
                elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                    terms transitive not(f_Top.ble(<<4>>, <<1>>))
                    terms transitive not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
                oper ETO f_Top.ble f_Top.beq
                closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
                oper ETO f_Top.ble f_Top.beq
                    new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
                oper ETO f_Top.ble f_Top.beq
                closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                Elaboration
                    t = not(f_Top.ble(<<4>>, <<1>>))

                elaborate term = f_Top.beq(<<1>>, <<4>>)
                elaborate term = not(f_Top.ble(<<4>>, <<1>>))
                elaborate term = not(f_Top.ble(<<4>>, <<1>>))
                elaborate term2 = f_Top.beq(<<1>>, <<4>>)
                elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                    terms transitive f_Top.beq(<<1>>, <<4>>)
                    terms transitive not(f_Top.ble(<<4>>, <<1>>))
                    terms transitive not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive_input f_Top.beq(<<1>>, <<4>>)
                    new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive term f_Top.beq(<<1>>, <<4>>)
                    new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                    new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                    Cycle
                Elaboration
                    t = False

                results1 not(f_Top.ble(<<4>>, <<1>>))
                results2 False
                False case
                Results: f_Top.beq(y, x)
                  False
              comparing False f_Top.beq(y, x)
              rewriting expression2: False
                builtin False
                end builtin False
                rless(x, rplus(x, 1#1)) { True } -> True
                rless(0#1, rplus(1#1, x)) { True } -> True
                rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
                rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
                rless(x, x) { True } -> False
                rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
                rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
                rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
                rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
                rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
                rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
                rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
                rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
                rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
                rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
                rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
                rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
                rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
                rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
                rminus(x, x) { True } -> 0#1
                rminus(x, 0#1) { True } -> x
                rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
                rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
                rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
                rplus(x, 0#1) { True } = x
                nless(x, nplus(x, 1)) { True } -> True
                nless(0, nplus(1, x)) { True } -> True
                nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
                nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
                nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
                nless(x, x) { True } -> False
                nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
                nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
                nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
                nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
                nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
                nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
                ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
                nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
                nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
                nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
                nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
                nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
                nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
                nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
                nminus(x, x) { True } -> 0
                nminus(x, 0) { True } -> x
                nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
                nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
                nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
                nplus(x, 0) { True } = x
                nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
                preceq(0, y) { True } -> True
                nminus(x, y) == z { True } = x == nplus(y, z)
                x == nplus(y, z) { True } = nminus(x, y) == z
                x == y { nless(x, y) } = False
                x == nplus(x, 1) { True } -> False
                nplus(x, y) == nplus(x, z) { True } -> y == z
                y == z { True } = nplus(x, y) == nplus(x, z)
                nminus(x, a) == b { True } -> x == nplus(a, b)
                x == nplus(a, b) { True } = nminus(x, a) == b
                ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
                y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
                rminus(x, y) == z { True } = x == rplus(y, z)
                x == rplus(y, z) { True } = rminus(x, y) == z
                x == y { rless(x, y) } = False
                x == rplus(x, 1#1) { True } -> False
                rplus(x, y) == rplus(x, z) { True } -> y == z
                y == z { True } = rplus(x, y) == rplus(x, z)
                rminus(x, a) == b { True } -> x == rplus(a, b)
                x == rplus(a, b) { True } = rminus(x, a) == b
                rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
                y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
                nless(x, y) | nless(y, x) | x  == y { True } -> True
                rless(x, y) | rless(y, x) | x  == y { True } -> True
                nless(x, y) & nless(y, x) { True } -> False
                x  == y & nless(y, x) { True } -> False
                rless(x, y) & rless(y, x) { True } -> False
                x  == y & rless(y, x) { True } -> False
                False { nless(x, y) } = x == y
                False { True } = nless(x, y) & nless(y, x)
                False { True } = nless(x, y) & y  == x
                False { True } = x == nplus(x, 1)
                False { True } = nless(x, x)
                False { rless(x, y) } = x == y
                False { True } = rless(x, y) & rless(y, x)
                False { True } = rless(x, y) & y  == x
                False { True } = x == rplus(x, 1#1)
                False { True } = rless(x, x)
                True { True } = nless(x, nplus(x, 1))
                True { True } = preceq(0, y)
                True { True } = nless(0, nplus(1, x))
                True { True } = nless(x, y) | nless(y, x) | x  == y
                True { True } = nless(nplus(a, 1), b)
                True { True } = rless(x, rplus(x, 1#1))
                True { True } = rless(0, rplus(1#1, x))
                True { True } = rless(x, y) | rless(y, x) | x  == y
                0 { True } = nminus(x, x)
                x { True } = nminus(x, 0)
                x { True } = nplus(x, 0)
                0#1 { True } = rminus(x, x)
                x { True } = rminus(x, 0#1)
                x { True } = rplus(x, 0#1)
                DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Rules:
                  P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
                Result:
                  <<51>>
              end rewrite for: False
              Result:
                <<51>>
                False
            end rewrite for: f_Top.beq(<<1>>, <<4>>)
            KB Rewriting not(f_Top.beq(<<1>>, <<4>>)) 1 1
              term not(f_Top.beq(<<1>>, <<4>>))
              env_term not(f_Top.ble(x, y))
              env_op_term not(f_Top.ble(x, y))
              cond_term not(f_Top.ble(x, y))
              cond_term not(f_Top.ble(x, y))
              exp_term not(f_Top.beq(<<1>>, <<4>>))
              all_term not(f_Top.beq(<<1>>, <<4>>))
              all_term not(f_Top.ble(x, y))
              all_term not(f_Top.ble(x, y))
              cond_term2 not(f_Top.ble(x, y))
              cond_term2 not(f_Top.ble(x, y))
              Operator ETO f_Top.ble f_Top.beq
              cond_term not(f_Top.ble(x, y))
              cond_term not(f_Top.ble(x, y))
              terms not(f_Top.beq(<<1>>, <<4>>))
              elaborate term = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                  terms transitive not(f_Top.ble(<<4>>, <<1>>))
                  terms transitive not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = not(f_Top.ble(<<4>>, <<1>>))

              elaborate term = not(f_Top.beq(<<1>>, <<4>>))
              elaborate term = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term2 = not(f_Top.beq(<<1>>, <<4>>))
              elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                  terms transitive not(f_Top.beq(<<1>>, <<4>>))
                  terms transitive not(f_Top.ble(<<4>>, <<1>>))
                  terms transitive not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive_input not(f_Top.beq(<<1>>, <<4>>))
                  new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive term not(f_Top.beq(<<1>>, <<4>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
              closure_terms not(f_Top.beq(<<1>>, <<4>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.beq(<<1>>, <<4>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
                  new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = not(f_Top.ble(<<4>>, <<1>>))

              results1 not(f_Top.ble(<<4>>, <<1>>))
              results2 not(f_Top.ble(<<4>>, <<1>>))
              Default case
              Results: not(f_Top.beq(<<1>>, <<4>>))
                True
            comparing True not(f_Top.beq(<<1>>, <<4>>))
            builtin True
            end builtin True
            rless(x, rplus(x, 1#1)) { True } -> True
            rless(0#1, rplus(1#1, x)) { True } -> True
            rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
            rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
            rless(x, x) { True } -> False
            rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
            rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
            rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
            rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
            rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
            rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
            rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
            rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
            rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
            rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
            rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
            rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
            rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
            rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
            rminus(x, x) { True } -> 0#1
            rminus(x, 0#1) { True } -> x
            rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
            rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
            rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
            rplus(x, 0#1) { True } = x
            nless(x, nplus(x, 1)) { True } -> True
            nless(0, nplus(1, x)) { True } -> True
            nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
            nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
            nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
            nless(x, x) { True } -> False
            nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
            nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
            nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
            nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
            nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
            nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
            ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
            nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
            nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
            nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
            nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
            nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
            nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
            nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
            nminus(x, x) { True } -> 0
            nminus(x, 0) { True } -> x
            nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
            nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
            nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
            nplus(x, 0) { True } = x
            nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
            preceq(0, y) { True } -> True
            nminus(x, y) == z { True } = x == nplus(y, z)
            x == nplus(y, z) { True } = nminus(x, y) == z
            x == y { nless(x, y) } = False
            x == nplus(x, 1) { True } -> False
            nplus(x, y) == nplus(x, z) { True } -> y == z
            y == z { True } = nplus(x, y) == nplus(x, z)
            nminus(x, a) == b { True } -> x == nplus(a, b)
            x == nplus(a, b) { True } = nminus(x, a) == b
            ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
            y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
            rminus(x, y) == z { True } = x == rplus(y, z)
            x == rplus(y, z) { True } = rminus(x, y) == z
            x == y { rless(x, y) } = False
            x == rplus(x, 1#1) { True } -> False
            rplus(x, y) == rplus(x, z) { True } -> y == z
            y == z { True } = rplus(x, y) == rplus(x, z)
            rminus(x, a) == b { True } -> x == rplus(a, b)
            x == rplus(a, b) { True } = rminus(x, a) == b
            rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
            y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
            nless(x, y) | nless(y, x) | x  == y { True } -> True
            rless(x, y) | rless(y, x) | x  == y { True } -> True
            nless(x, y) & nless(y, x) { True } -> False
            x  == y & nless(y, x) { True } -> False
            rless(x, y) & rless(y, x) { True } -> False
            x  == y & rless(y, x) { True } -> False
            False { nless(x, y) } = x == y
            False { True } = nless(x, y) & nless(y, x)
            False { True } = nless(x, y) & y  == x
            False { True } = x == nplus(x, 1)
            False { True } = nless(x, x)
            False { rless(x, y) } = x == y
            False { True } = rless(x, y) & rless(y, x)
            False { True } = rless(x, y) & y  == x
            False { True } = x == rplus(x, 1#1)
            False { True } = rless(x, x)
            True { True } = nless(x, nplus(x, 1))
            True { True } = preceq(0, y)
            True { True } = nless(0, nplus(1, x))
            True { True } = nless(x, y) | nless(y, x) | x  == y
            True { True } = nless(nplus(a, 1), b)
            True { True } = rless(x, rplus(x, 1#1))
            True { True } = rless(0, rplus(1#1, x))
            True { True } = rless(x, y) | rless(y, x) | x  == y
            0 { True } = nminus(x, x)
            x { True } = nminus(x, 0)
            x { True } = nplus(x, 0)
            0#1 { True } = rminus(x, x)
            x { True } = rminus(x, 0#1)
            x { True } = rplus(x, 0#1)
            DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Rules:
              P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Result:
              <<19>>
              True
          end rewrite for: not(<<257>>)
          equal <<19>> not(<<257>>)
          equal: No
          Deriving True { True } -> True
            d True { N[True] } -> N[True]
            Result:
          end derive for: True { True } -> True
          rewriting expression1: not(<<259>>)
            rewriting expression1: f_Top.ble(<<4>>, <<1>>)
              rewriting expression1: x
                Result:
                  <<4>>
                  x
              end rewrite for: x
              rewriting expression1: y
                Result:
                  <<1>>
                  y
              end rewrite for: y
              builtin f_Top.ble(<<4>>, <<1>>)
              end builtin f_Top.ble(x, y)
              rless(x, rplus(x, 1#1)) { True } -> True
              rless(0#1, rplus(1#1, x)) { True } -> True
              rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
              rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
              rless(x, x) { True } -> False
              rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
              rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
              rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
              rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
              rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
              rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
              rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
              rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
              rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
              rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
              rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
              rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
              rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
              rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
              rminus(x, x) { True } -> 0#1
              rminus(x, 0#1) { True } -> x
              rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
              rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
              rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
              rplus(x, 0#1) { True } = x
              nless(x, nplus(x, 1)) { True } -> True
              nless(0, nplus(1, x)) { True } -> True
              nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
              nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
              nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
              nless(x, x) { True } -> False
              nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
              nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
              nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
              nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
              nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
              nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
              ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
              nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
              nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
              nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
              nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
              nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
              nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
              nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
              nminus(x, x) { True } -> 0
              nminus(x, 0) { True } -> x
              nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
              nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
              nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
              nplus(x, 0) { True } = x
              nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
              preceq(0, y) { True } -> True
              nminus(x, y) == z { True } = x == nplus(y, z)
              x == nplus(y, z) { True } = nminus(x, y) == z
              x == y { nless(x, y) } = False
              x == nplus(x, 1) { True } -> False
              nplus(x, y) == nplus(x, z) { True } -> y == z
              y == z { True } = nplus(x, y) == nplus(x, z)
              nminus(x, a) == b { True } -> x == nplus(a, b)
              x == nplus(a, b) { True } = nminus(x, a) == b
              ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
              y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
              rminus(x, y) == z { True } = x == rplus(y, z)
              x == rplus(y, z) { True } = rminus(x, y) == z
              x == y { rless(x, y) } = False
              x == rplus(x, 1#1) { True } -> False
              rplus(x, y) == rplus(x, z) { True } -> y == z
              y == z { True } = rplus(x, y) == rplus(x, z)
              rminus(x, a) == b { True } -> x == rplus(a, b)
              x == rplus(a, b) { True } = rminus(x, a) == b
              rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
              y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
              nless(x, y) | nless(y, x) | x  == y { True } -> True
              rless(x, y) | rless(y, x) | x  == y { True } -> True
              nless(x, y) & nless(y, x) { True } -> False
              x  == y & nless(y, x) { True } -> False
              rless(x, y) & rless(y, x) { True } -> False
              x  == y & rless(y, x) { True } -> False
              False { nless(x, y) } = x == y
              False { True } = nless(x, y) & nless(y, x)
              False { True } = nless(x, y) & y  == x
              False { True } = x == nplus(x, 1)
              False { True } = nless(x, x)
              False { rless(x, y) } = x == y
              False { True } = rless(x, y) & rless(y, x)
              False { True } = rless(x, y) & y  == x
              False { True } = x == rplus(x, 1#1)
              False { True } = rless(x, x)
              True { True } = nless(x, nplus(x, 1))
              True { True } = preceq(0, y)
              True { True } = nless(0, nplus(1, x))
              True { True } = nless(x, y) | nless(y, x) | x  == y
              True { True } = nless(nplus(a, 1), b)
              True { True } = rless(x, rplus(x, 1#1))
              True { True } = rless(0, rplus(1#1, x))
              True { True } = rless(x, y) | rless(y, x) | x  == y
              0 { True } = nminus(x, x)
              x { True } = nminus(x, 0)
              x { True } = nplus(x, 0)
              0#1 { True } = rminus(x, x)
              x { True } = rminus(x, 0#1)
              x { True } = rplus(x, 0#1)
              DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
              Rules:
                P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
              KB Rewriting f_Top.ble(x, y) 1 1
                term f_Top.ble(x, y)
                exp_term f_Top.ble(x, y)
                all_term f_Top.ble(x, y)
                Operator ETO f_Top.ble f_Top.beq
                terms f_Top.ble(x, y)
                    Cycle
                Elaboration
                elaborate term = f_Top.ble(<<4>>, <<1>>)
                elaborate term2 = f_Top.ble(<<4>>, <<1>>)
                    terms transitive f_Top.ble(<<4>>, <<1>>)
                    new_transitive_input f_Top.ble(<<4>>, <<1>>)
                    new_transitive term f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.ble(<<4>>, <<1>>)
                    new_transitive t f_Top.ble(<<4>>, <<1>>)
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                closure_terms f_Top.ble(<<4>>, <<1>>) f_Top.ble(<<4>>, <<1>>)
                oper ETO f_Top.ble f_Top.beq
                    Cycle
                Elaboration
                    t = f_Top.ble(<<4>>, <<1>>)

                results2 f_Top.ble(<<4>>, <<1>>)
                Default case
                return f_Top.ble(<<4>>, <<1>>)
                Results: f_Top.ble(x, y)
                  f_Top.ble(<<4>>, <<1>>)
              Result:
                <<259>>
                f_Top.ble(x, y)
            end rewrite for: f_Top.ble(<<4>>, <<1>>)
            KB Rewriting not(f_Top.ble(<<4>>, <<1>>)) 1 1
              term not(f_Top.ble(<<4>>, <<1>>))
              exp_term not(f_Top.ble(<<4>>, <<1>>))
              all_term not(f_Top.ble(<<4>>, <<1>>))
              Operator ETO f_Top.ble f_Top.beq
              terms not(f_Top.ble(<<4>>, <<1>>))
                  Cycle
              Elaboration
              elaborate term = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                  terms transitive not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = not(f_Top.ble(<<4>>, <<1>>))

              results2 not(f_Top.ble(<<4>>, <<1>>))
              Default case
              return not(f_Top.ble(<<4>>, <<1>>))
              Results: not(f_Top.ble(<<4>>, <<1>>))
                not(f_Top.ble(<<4>>, <<1>>))
            builtin not(f_Top.ble(<<4>>, <<1>>))
            end builtin not(f_Top.ble(<<4>>, <<1>>))
            rless(x, rplus(x, 1#1)) { True } -> True
            rless(0#1, rplus(1#1, x)) { True } -> True
            rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
            rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
            rless(x, x) { True } -> False
            rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
            rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
            rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
            rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
            rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
            rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
            rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
            rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
            rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
            rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
            rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
            rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
            rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
            rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
            rminus(x, x) { True } -> 0#1
            rminus(x, 0#1) { True } -> x
            rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
            rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
            rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
            rplus(x, 0#1) { True } = x
            nless(x, nplus(x, 1)) { True } -> True
            nless(0, nplus(1, x)) { True } -> True
            nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
            nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
            nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
            nless(x, x) { True } -> False
            nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
            nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
            nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
            nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
            nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
            nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
            ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
            nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
            nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
            nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
            nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
            nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
            nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
            nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
            nminus(x, x) { True } -> 0
            nminus(x, 0) { True } -> x
            nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
            nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
            nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
            nplus(x, 0) { True } = x
            nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
            preceq(0, y) { True } -> True
            nminus(x, y) == z { True } = x == nplus(y, z)
            x == nplus(y, z) { True } = nminus(x, y) == z
            x == y { nless(x, y) } = False
            x == nplus(x, 1) { True } -> False
            nplus(x, y) == nplus(x, z) { True } -> y == z
            y == z { True } = nplus(x, y) == nplus(x, z)
            nminus(x, a) == b { True } -> x == nplus(a, b)
            x == nplus(a, b) { True } = nminus(x, a) == b
            ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
            y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
            rminus(x, y) == z { True } = x == rplus(y, z)
            x == rplus(y, z) { True } = rminus(x, y) == z
            x == y { rless(x, y) } = False
            x == rplus(x, 1#1) { True } -> False
            rplus(x, y) == rplus(x, z) { True } -> y == z
            y == z { True } = rplus(x, y) == rplus(x, z)
            rminus(x, a) == b { True } -> x == rplus(a, b)
            x == rplus(a, b) { True } = rminus(x, a) == b
            rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
            y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
            nless(x, y) | nless(y, x) | x  == y { True } -> True
            rless(x, y) | rless(y, x) | x  == y { True } -> True
            nless(x, y) & nless(y, x) { True } -> False
            x  == y & nless(y, x) { True } -> False
            rless(x, y) & rless(y, x) { True } -> False
            x  == y & rless(y, x) { True } -> False
            False { nless(x, y) } = x == y
            False { True } = nless(x, y) & nless(y, x)
            False { True } = nless(x, y) & y  == x
            False { True } = x == nplus(x, 1)
            False { True } = nless(x, x)
            False { rless(x, y) } = x == y
            False { True } = rless(x, y) & rless(y, x)
            False { True } = rless(x, y) & y  == x
            False { True } = x == rplus(x, 1#1)
            False { True } = rless(x, x)
            True { True } = nless(x, nplus(x, 1))
            True { True } = preceq(0, y)
            True { True } = nless(0, nplus(1, x))
            True { True } = nless(x, y) | nless(y, x) | x  == y
            True { True } = nless(nplus(a, 1), b)
            True { True } = rless(x, rplus(x, 1#1))
            True { True } = rless(0, rplus(1#1, x))
            True { True } = rless(x, y) | rless(y, x) | x  == y
            0 { True } = nminus(x, x)
            x { True } = nminus(x, 0)
            x { True } = nplus(x, 0)
            0#1 { True } = rminus(x, x)
            x { True } = rminus(x, 0#1)
            x { True } = rplus(x, 0#1)
            DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Rules:
              P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            KB Rewriting not(f_Top.ble(<<4>>, <<1>>)) 1 1
              term not(f_Top.ble(<<4>>, <<1>>))
              exp_term not(f_Top.ble(<<4>>, <<1>>))
              all_term not(f_Top.ble(<<4>>, <<1>>))
              Operator ETO f_Top.ble f_Top.beq
              terms not(f_Top.ble(<<4>>, <<1>>))
                  Cycle
              Elaboration
              elaborate term = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                  terms transitive not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = not(f_Top.ble(<<4>>, <<1>>))

              results2 not(f_Top.ble(<<4>>, <<1>>))
              Default case
              return not(f_Top.ble(<<4>>, <<1>>))
              Results: not(f_Top.ble(<<4>>, <<1>>))
                not(f_Top.ble(<<4>>, <<1>>))
            Result:
              <<260>>
              not(f_Top.ble(x, y))
          end rewrite for: not(<<259>>)
          equal <<260>> not(<<259>>)
          equal: Yes
          rewriting expression1: <<19>>
            builtin True
            end builtin True
            rless(x, rplus(x, 1#1)) { True } -> True
            rless(0#1, rplus(1#1, x)) { True } -> True
            rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
            rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
            rless(x, x) { True } -> False
            rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
            rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
            rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
            rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
            rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
            rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
            rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
            rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
            rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
            rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
            rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
            rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
            rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
            rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
            rminus(x, x) { True } -> 0#1
            rminus(x, 0#1) { True } -> x
            rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
            rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
            rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
            rplus(x, 0#1) { True } = x
            nless(x, nplus(x, 1)) { True } -> True
            nless(0, nplus(1, x)) { True } -> True
            nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
            nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
            nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
            nless(x, x) { True } -> False
            nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
            nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
            nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
            nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
            nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
            nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
            ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
            nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
            nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
            nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
            nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
            nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
            nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
            nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
            nminus(x, x) { True } -> 0
            nminus(x, 0) { True } -> x
            nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
            nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
            nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
            nplus(x, 0) { True } = x
            nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
            preceq(0, y) { True } -> True
            nminus(x, y) == z { True } = x == nplus(y, z)
            x == nplus(y, z) { True } = nminus(x, y) == z
            x == y { nless(x, y) } = False
            x == nplus(x, 1) { True } -> False
            nplus(x, y) == nplus(x, z) { True } -> y == z
            y == z { True } = nplus(x, y) == nplus(x, z)
            nminus(x, a) == b { True } -> x == nplus(a, b)
            x == nplus(a, b) { True } = nminus(x, a) == b
            ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
            y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
            rminus(x, y) == z { True } = x == rplus(y, z)
            x == rplus(y, z) { True } = rminus(x, y) == z
            x == y { rless(x, y) } = False
            x == rplus(x, 1#1) { True } -> False
            rplus(x, y) == rplus(x, z) { True } -> y == z
            y == z { True } = rplus(x, y) == rplus(x, z)
            rminus(x, a) == b { True } -> x == rplus(a, b)
            x == rplus(a, b) { True } = rminus(x, a) == b
            rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
            y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
            nless(x, y) | nless(y, x) | x  == y { True } -> True
            rless(x, y) | rless(y, x) | x  == y { True } -> True
            nless(x, y) & nless(y, x) { True } -> False
            x  == y & nless(y, x) { True } -> False
            rless(x, y) & rless(y, x) { True } -> False
            x  == y & rless(y, x) { True } -> False
            False { nless(x, y) } = x == y
            False { True } = nless(x, y) & nless(y, x)
            False { True } = nless(x, y) & y  == x
            False { True } = x == nplus(x, 1)
            False { True } = nless(x, x)
            False { rless(x, y) } = x == y
            False { True } = rless(x, y) & rless(y, x)
            False { True } = rless(x, y) & y  == x
            False { True } = x == rplus(x, 1#1)
            False { True } = rless(x, x)
            True { True } = nless(x, nplus(x, 1))
            True { True } = preceq(0, y)
            True { True } = nless(0, nplus(1, x))
            True { True } = nless(x, y) | nless(y, x) | x  == y
            True { True } = nless(nplus(a, 1), b)
            True { True } = rless(x, rplus(x, 1#1))
            True { True } = rless(0, rplus(1#1, x))
            True { True } = rless(x, y) | rless(y, x) | x  == y
            0 { True } = nminus(x, x)
            x { True } = nminus(x, 0)
            x { True } = nplus(x, 0)
            0#1 { True } = rminus(x, x)
            x { True } = rminus(x, 0#1)
            x { True } = rplus(x, 0#1)
            DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Rules:
              P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Result:
              <<19>>
              True
          end rewrite for: <<19>>
          equal <<19>> <<19>>
          equal: Yes
          rewriting expression1: <<260>>
            Result:
              <<260>>
              not(f_Top.ble(x, y))
          end rewrite for: <<260>>
          equal <<260>> <<260>>
          equal: Yes
          builtin True & not(f_Top.ble(x, y))
            &(N[not(<<259>>)])
          end builtin &(N[not(<<259>>)])
          rewriting expression1: &(N[not(<<259>>)])
            rewriting expression1: <<259>>
              Result:
                <<259>>
                f_Top.ble(x, y)
            end rewrite for: <<259>>
            KB Rewriting <<259>> 1 1
              term f_Top.ble(<<4>>, <<1>>)
              residue <<259>>
              Operator ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  Cycle
              Elaboration
              Default case
              Results: <<259>>
                <<259>>
            builtin not(<<259>>)
            end builtin not(f_Top.ble(<<4>>, <<1>>))
            rless(x, rplus(x, 1#1)) { True } -> True
            rless(0#1, rplus(1#1, x)) { True } -> True
            rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
            rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
            rless(x, x) { True } -> False
            rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
            rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
            rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
            rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
            rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
            rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
            rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
            rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
            rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
            rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
            rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
            rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
            rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
            rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
            rminus(x, x) { True } -> 0#1
            rminus(x, 0#1) { True } -> x
            rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
            rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
            rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
            rplus(x, 0#1) { True } = x
            nless(x, nplus(x, 1)) { True } -> True
            nless(0, nplus(1, x)) { True } -> True
            nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
            nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
            nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
            nless(x, x) { True } -> False
            nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
            nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
            nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
            nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
            nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
            nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
            ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
            nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
            nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
            nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
            nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
            nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
            nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
            nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
            nminus(x, x) { True } -> 0
            nminus(x, 0) { True } -> x
            nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
            nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
            nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
            nplus(x, 0) { True } = x
            nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
            preceq(0, y) { True } -> True
            nminus(x, y) == z { True } = x == nplus(y, z)
            x == nplus(y, z) { True } = nminus(x, y) == z
            x == y { nless(x, y) } = False
            x == nplus(x, 1) { True } -> False
            nplus(x, y) == nplus(x, z) { True } -> y == z
            y == z { True } = nplus(x, y) == nplus(x, z)
            nminus(x, a) == b { True } -> x == nplus(a, b)
            x == nplus(a, b) { True } = nminus(x, a) == b
            ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
            y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
            rminus(x, y) == z { True } = x == rplus(y, z)
            x == rplus(y, z) { True } = rminus(x, y) == z
            x == y { rless(x, y) } = False
            x == rplus(x, 1#1) { True } -> False
            rplus(x, y) == rplus(x, z) { True } -> y == z
            y == z { True } = rplus(x, y) == rplus(x, z)
            rminus(x, a) == b { True } -> x == rplus(a, b)
            x == rplus(a, b) { True } = rminus(x, a) == b
            rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
            y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
            nless(x, y) | nless(y, x) | x  == y { True } -> True
            rless(x, y) | rless(y, x) | x  == y { True } -> True
            nless(x, y) & nless(y, x) { True } -> False
            x  == y & nless(y, x) { True } -> False
            rless(x, y) & rless(y, x) { True } -> False
            x  == y & rless(y, x) { True } -> False
            False { nless(x, y) } = x == y
            False { True } = nless(x, y) & nless(y, x)
            False { True } = nless(x, y) & y  == x
            False { True } = x == nplus(x, 1)
            False { True } = nless(x, x)
            False { rless(x, y) } = x == y
            False { True } = rless(x, y) & rless(y, x)
            False { True } = rless(x, y) & y  == x
            False { True } = x == rplus(x, 1#1)
            False { True } = rless(x, x)
            True { True } = nless(x, nplus(x, 1))
            True { True } = preceq(0, y)
            True { True } = nless(0, nplus(1, x))
            True { True } = nless(x, y) | nless(y, x) | x  == y
            True { True } = nless(nplus(a, 1), b)
            True { True } = rless(x, rplus(x, 1#1))
            True { True } = rless(0, rplus(1#1, x))
            True { True } = rless(x, y) | rless(y, x) | x  == y
            0 { True } = nminus(x, x)
            x { True } = nminus(x, 0)
            x { True } = nplus(x, 0)
            0#1 { True } = rminus(x, x)
            x { True } = rminus(x, 0#1)
            x { True } = rplus(x, 0#1)
            DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            Rules:
              P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
            KB Rewriting not(f_Top.ble(<<4>>, <<1>>)) 1 1
              term not(f_Top.ble(<<4>>, <<1>>))
              exp_term not(f_Top.ble(<<4>>, <<1>>))
              all_term not(f_Top.ble(<<4>>, <<1>>))
              Operator ETO f_Top.ble f_Top.beq
              terms not(f_Top.ble(<<4>>, <<1>>))
                  Cycle
              Elaboration
              elaborate term = not(f_Top.ble(<<4>>, <<1>>))
              elaborate term2 = not(f_Top.ble(<<4>>, <<1>>))
                  terms transitive not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive_input not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive term not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
                  new_transitive t not(f_Top.ble(<<4>>, <<1>>))
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
              closure_terms not(f_Top.ble(<<4>>, <<1>>)) not(f_Top.ble(<<4>>, <<1>>))
              oper ETO f_Top.ble f_Top.beq
                  Cycle
              Elaboration
                  t = not(f_Top.ble(<<4>>, <<1>>))

              results2 not(f_Top.ble(<<4>>, <<1>>))
              Default case
              return not(f_Top.ble(<<4>>, <<1>>))
              Results: not(f_Top.ble(<<4>>, <<1>>))
                not(f_Top.ble(<<4>>, <<1>>))
            Result:
              <<260>>
              not(f_Top.ble(x, y))
          end rewrite for: &(N[not(<<259>>)])
          Result:
            <<260>>
            not(f_Top.ble(x, y))
        end rewrite for: <<258>> & <<260>>
        builtin <<19>> == <<260>>
          not(<<259>>)
        end builtin not(<<259>>)
        rewriting expression1: not(<<259>>)
          Result:
            <<260>>
            not(f_Top.ble(x, y))
        end rewrite for: not(<<259>>)
        Result:
          <<260>>
          not(f_Top.ble(x, y))
      end rewrite for: <<19>> == <<288>>
      rewriting expression1: True
        Result:
          <<19>>
          True
      end rewrite for: True
      builtin ALL(y:C_Coq.Init.Datatypes.nat: <<19>>) <<260>>
      end builtin ALL(y:C_Coq.Init.Datatypes.nat: True) not(<<259>>)
      rless(x, rplus(x, 1#1)) { True } -> True
      rless(0#1, rplus(1#1, x)) { True } -> True
      rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
      rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
      rless(x, x) { True } -> False
      rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
      rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
      rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
      rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
      rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
      rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
      rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
      rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
      rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
      rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
      rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
      rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
      rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
      rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
      rminus(x, x) { True } -> 0#1
      rminus(x, 0#1) { True } -> x
      rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
      rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
      rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
      rplus(x, 0#1) { True } = x
      nless(x, nplus(x, 1)) { True } -> True
      nless(0, nplus(1, x)) { True } -> True
      nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
      nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
      nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
      nless(x, x) { True } -> False
      nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
      nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
      nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
      nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
      nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
      nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
      ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
      nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
      nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
      nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
      nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
      nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
      nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
      nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
      nminus(x, x) { True } -> 0
      nminus(x, 0) { True } -> x
      nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
      nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
      nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
      nplus(x, 0) { True } = x
      nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
      preceq(0, y) { True } -> True
      nminus(x, y) == z { True } = x == nplus(y, z)
      x == nplus(y, z) { True } = nminus(x, y) == z
      x == y { nless(x, y) } = False
      x == nplus(x, 1) { True } -> False
      nplus(x, y) == nplus(x, z) { True } -> y == z
      y == z { True } = nplus(x, y) == nplus(x, z)
      nminus(x, a) == b { True } -> x == nplus(a, b)
      x == nplus(a, b) { True } = nminus(x, a) == b
      ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
      y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
      rminus(x, y) == z { True } = x == rplus(y, z)
      x == rplus(y, z) { True } = rminus(x, y) == z
      x == y { rless(x, y) } = False
      x == rplus(x, 1#1) { True } -> False
      rplus(x, y) == rplus(x, z) { True } -> y == z
      y == z { True } = rplus(x, y) == rplus(x, z)
      rminus(x, a) == b { True } -> x == rplus(a, b)
      x == rplus(a, b) { True } = rminus(x, a) == b
      rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
      y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
      nless(x, y) | nless(y, x) | x  == y { True } -> True
      rless(x, y) | rless(y, x) | x  == y { True } -> True
      nless(x, y) & nless(y, x) { True } -> False
      x  == y & nless(y, x) { True } -> False
      rless(x, y) & rless(y, x) { True } -> False
      x  == y & rless(y, x) { True } -> False
      False { nless(x, y) } = x == y
      False { True } = nless(x, y) & nless(y, x)
      False { True } = nless(x, y) & y  == x
      False { True } = x == nplus(x, 1)
      False { True } = nless(x, x)
      False { rless(x, y) } = x == y
      False { True } = rless(x, y) & rless(y, x)
      False { True } = rless(x, y) & y  == x
      False { True } = x == rplus(x, 1#1)
      False { True } = rless(x, x)
      True { True } = nless(x, nplus(x, 1))
      True { True } = preceq(0, y)
      True { True } = nless(0, nplus(1, x))
      True { True } = nless(x, y) | nless(y, x) | x  == y
      True { True } = nless(nplus(a, 1), b)
      True { True } = rless(x, rplus(x, 1#1))
      True { True } = rless(0, rplus(1#1, x))
      True { True } = rless(x, y) | rless(y, x) | x  == y
      0 { True } = nminus(x, x)
      x { True } = nminus(x, 0)
      x { True } = nplus(x, 0)
      0#1 { True } = rminus(x, x)
      x { True } = rminus(x, 0#1)
      x { True } = rplus(x, 0#1)
      DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
      Rules:
        P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
      Result:
        <<301>>
        ALL(y:C_Coq.Init.Datatypes.nat: True) not(f_Top.ble(x, y))
    end rewrite for: ALL(y:C_Coq.Init.Datatypes.nat: <<19>>) <<289>>
    rewriting expression1: True
      Result:
        <<19>>
        True
    end rewrite for: True
    builtin ALL(x:C_Coq.Init.Datatypes.nat: <<19>>) <<301>>
    end builtin ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: <<19>>) <<260>>
    rless(x, rplus(x, 1#1)) { True } -> True
    rless(0#1, rplus(1#1, x)) { True } -> True
    rless(rplus(x, y), rplus(x, z)) { True } -> rless(y, z)
    rless(y, z) { True } = rless(rplus(x, y), rplus(x, z))
    rless(x, x) { True } -> False
    rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1))
    rless(x, rplus(y, 1#1)) { True } = rless(rminus(x, 1), y)
    rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b))
    rless(x, rplus(a, b)) { True } = rless(rminus(x, a), b)
    rless(a, rminus(b, x)) { True } -> rless(rplus(a, x), b)
    rless(rplus(a, x), b) { True } = rless(a, rminus(b, x))
    rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(x, y), rtimes(x, z))
    rminus(x, rplus(a, b)) { True } = rminus(rminus(x, a), b)
    rminus(rminus(x, a), b) { True } = rminus(x, rplus(a, b))
    rminus(x, rminus(a - b)) { True } -> rplus(rminus(x - a), b)
    rminus(rplus(x, a), b) { True } = rplus(rminus(x, b), a)
    rminus(rplus(a, b), c) { not(rless(c, a)) } = rplus(rminus(a, c), b)
    rminus(rplus(1#1, x), rplus(1#1, y)) { True } -> rminus(x, y)
    rminus(x, y) { True } = rminus(rplus(1#1, x), rplus(1#1, y))
    rminus(x, x) { True } -> 0#1
    rminus(x, 0#1) { True } -> x
    rplus(rminus(x, a), b) { True } -> rminus(x, rminus(a, b))
    rplus(rminus(x, b), a) { True } = rminus(nplus(x, a), b)
    rplus(rminus(a, c), b) { True } = rminus(rplus(a, b), c)
    rplus(x, 0#1) { True } = x
    nless(x, nplus(x, 1)) { True } -> True
    nless(0, nplus(1, x)) { True } -> True
    nless(nplus(a, 1), b) { not(nplus(a, 1) == b) & nless(a, b) } -> True
    nless(nplus(x, y), nplus(x, z)) { True } -> nless(y, z)
    nless(y, z) { True } = nless(nplus(x, y), nplus(x, z))
    nless(x, x) { True } -> False
    nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1))
    nless(x, nplus(y, 1)) { True } = nless(nminus(x, 1), y)
    nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b))
    nless(x, nplus(a, b)) { True } = nless(nminus(x, a), b)
    nless(a, nminus(b, x)) { True } -> nless(nplus(a, x), b)
    nless(nplus(a, x), b) { True } = nless(a, nminus(b, x))
    ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(x, y), ntimes(x, z))
    nminus(x, nplus(a, b)) { True } = nminus(nminus(x, a), b)
    nminus(nminus(x, a), b) { True } = nminus(x, nplus(a, b))
    nminus(x, nminus(a - b)) { True } -> nplus(nminus(x - a), b)
    nminus(nplus(x, a), b) { True } = nplus(nminus(x, b), a)
    nminus(nplus(a, b), c) { not(nless(c, a)) } = nplus(nminus(a, c), b)
    nminus(nplus(1, x), nplus(1, y)) { True } -> nminus(x, y)
    nminus(x, y) { True } = nminus(nplus(1, x) - nplus(1, y))
    nminus(x, x) { True } -> 0
    nminus(x, 0) { True } -> x
    nplus(nminus(x, a), b) { True } -> nminus(x, nminus(a, b))
    nplus(nminus(x, b), a) { True } = nminus(nplus(x, a), b)
    nplus(nminus(a, c), b) { True } = nminus(nplus(a, b), c)
    nplus(x, 0) { True } = x
    nplus(ntimes(x, y), ntimes(x, z)) { True } = ntimes(x, nplus(y, z))
    preceq(0, y) { True } -> True
    nminus(x, y) == z { True } = x == nplus(y, z)
    x == nplus(y, z) { True } = nminus(x, y) == z
    x == y { nless(x, y) } = False
    x == nplus(x, 1) { True } -> False
    nplus(x, y) == nplus(x, z) { True } -> y == z
    y == z { True } = nplus(x, y) == nplus(x, z)
    nminus(x, a) == b { True } -> x == nplus(a, b)
    x == nplus(a, b) { True } = nminus(x, a) == b
    ntimes(x, y) == ntimes(x, z) { not(x == 0) } -> y == z
    y == z { not(x == 0) } = ntimes(x, y) == ntimes(x, z)
    rminus(x, y) == z { True } = x == rplus(y, z)
    x == rplus(y, z) { True } = rminus(x, y) == z
    x == y { rless(x, y) } = False
    x == rplus(x, 1#1) { True } -> False
    rplus(x, y) == rplus(x, z) { True } -> y == z
    y == z { True } = rplus(x, y) == rplus(x, z)
    rminus(x, a) == b { True } -> x == rplus(a, b)
    x == rplus(a, b) { True } = rminus(x, a) == b
    rtimes(x, y) == rtimes(x, z) { not(x == 0#1) } -> y == z
    y == z { not(x == 0#1) } = rtimes(x, y) == rtimes(x, z)
    nless(x, y) | nless(y, x) | x  == y { True } -> True
    rless(x, y) | rless(y, x) | x  == y { True } -> True
    nless(x, y) & nless(y, x) { True } -> False
    x  == y & nless(y, x) { True } -> False
    rless(x, y) & rless(y, x) { True } -> False
    x  == y & rless(y, x) { True } -> False
    False { nless(x, y) } = x == y
    False { True } = nless(x, y) & nless(y, x)
    False { True } = nless(x, y) & y  == x
    False { True } = x == nplus(x, 1)
    False { True } = nless(x, x)
    False { rless(x, y) } = x == y
    False { True } = rless(x, y) & rless(y, x)
    False { True } = rless(x, y) & y  == x
    False { True } = x == rplus(x, 1#1)
    False { True } = rless(x, x)
    True { True } = nless(x, nplus(x, 1))
    True { True } = preceq(0, y)
    True { True } = nless(0, nplus(1, x))
    True { True } = nless(x, y) | nless(y, x) | x  == y
    True { True } = nless(nplus(a, 1), b)
    True { True } = rless(x, rplus(x, 1#1))
    True { True } = rless(0, rplus(1#1, x))
    True { True } = rless(x, y) | rless(y, x) | x  == y
    0 { True } = nminus(x, x)
    x { True } = nminus(x, 0)
    x { True } = nplus(x, 0)
    0#1 { True } = rminus(x, x)
    x { True } = rminus(x, 0#1)
    x { True } = rplus(x, 0#1)
    DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
    Rules:
      P: DT{rless}[DT{Var}[DT{rminus}[E(rless(x, x) { True } -> False rless(a, rminus(b, x)) { True } -> rless(rplus(x, a), b))] DT{Var}[E(rless(x, x) { True } -> False)] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rminus}[DT{Var}[E(rless(x, x) { True } -> False rless(rminus(x, 1#1), y) { True } -> rless(x, rplus(y, 1#1)) rless(rminus(x, a), b) { True } -> rless(x, rplus(a, b)))] DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True)]] DT{rplus}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(rplus(y, x), rplus(z, x)) { True } -> rless(y, z))]] DT{Other}[DT{rplus}[E(rless(x, rplus(x, 1#1)) { True } -> True rless(0#1, rplus(x, 1#1)) { True } -> True)]]] DT{rminus}[DT{Var}[DT{Other}[E(rminus(x, x) { True } -> 0#1 rminus(x, 0#1) { True } -> x)] DT{Var}[E(rminus(x, x) { True } -> 0#1)] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]] DT{rplus}[DT{rplus}[E(rminus(rplus(x, 1#1), rplus(y, 1#1)) { True } -> rminus(x, y))] DT{rminus}[E(rminus(x, rminus(a - b)) { True } -> rplus(b, rminus(x - a)))]]] DT{nless}[DT{Var}[DT{nminus}[E(nless(x, x) { True } -> False nless(a, nminus(b, x)) { True } -> nless(nplus(x, a), b))] DT{Var}[E(nless(x, x) { True } -> False)] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nminus}[DT{Var}[E(nless(x, x) { True } -> False nless(nminus(x, 1), y) { True } -> nless(x, nplus(y, 1)) nless(nminus(x, a), b) { True } -> nless(x, nplus(a, b)))] DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True)]] DT{nplus}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True nless(nplus(y, x), nplus(z, x)) { True } -> nless(y, z))] DT{Var}[E(nless(nplus(a, 1), b) { not(b == nplus(a, 1)) & nless(a, b) } -> True)]] DT{Other}[DT{nplus}[E(nless(x, nplus(x, 1)) { True } -> True nless(0, nplus(x, 1)) { True } -> True)]]] DT{nminus}[DT{Var}[DT{Other}[E(nminus(x, x) { True } -> 0 nminus(x, 0) { True } -> x)] DT{Var}[E(nminus(x, x) { True } -> 0)] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]] DT{nplus}[DT{nplus}[E(nminus(nplus(x, 1), nplus(y, 1)) { True } -> nminus(x, y))] DT{nminus}[E(nminus(x, nminus(a - b)) { True } -> nplus(b, nminus(x - a)))]]] DT{preceq}[DT{Other}[DT{Var}[E(preceq(0, y) { True } -> True)]]] DT{&}[DS{== rless}[E(y  == x & rless(y, x) { True } -> False)] DS{rless}[E(rless(x, y) & rless(y, x) { True } -> False)] DS{== nless}[E(y  == x & nless(y, x) { True } -> False)] DS{nless}[E(nless(x, y) & nless(y, x) { True } -> False)]] DT{|}[DS{== nless}[E(y  == x | nless(x, y) | nless(y, x) { True } -> True)] DS{== rless}[E(rless(x, y) | y  == x | rless(y, x) { True } -> True)]] DT{nplus}[DS{nminus}[E(nplus(b, nminus(x, a)) { True } -> nminus(x, nminus(a, b)))]] DT{ntimes}[DS{nplus}[E(ntimes(x, nplus(y, z)) { True } -> nplus(ntimes(y, x), ntimes(z, x)))]] DT{rplus}[DS{rminus}[E(rplus(b, rminus(x, a)) { True } -> rminus(x, rminus(a, b)))]] DT{rtimes}[DS{rplus}[E(rtimes(x, rplus(y, z)) { True } -> rplus(rtimes(y, x), rtimes(z, x)))]] DT{==}[DS{nplus}[E(x == nplus(x, 1) { True } -> False nplus(y, x) == nplus(z, x) { True } -> y == z)] DS{nminus}[E(b == nminus(x, a) { True } -> x == nplus(a, b))] DS{ntimes}[E(ntimes(y, x) == ntimes(z, x) { not(x == 0) } -> y == z)] DS{rplus}[E(x == rplus(x, 1#1) { True } -> False rplus(y, x) == rplus(z, x) { True } -> y == z)] DS{rminus}[E(b == rminus(x, a) { True } -> x == rplus(a, b))] DS{rtimes}[E(rtimes(y, x) == rtimes(z, x) { not(x == 0#1) } -> y == z)]] 
    Result:
      <<302>>
      ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) not(f_Top.ble(x, y))
  end rewrite for: ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) (not(f_Top.beq(x, y))  & not(f_Top.ble(x, y))) == True
  Result:
    <<302>>
    ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) not(f_Top.ble(x, y))
end rewrite subterm: ALL(x:C_Coq.Init.Datatypes.nat: True) ALL(y:C_Coq.Init.Datatypes.nat: True) (not(f_Top.beq(x, y))  & not(f_Top.ble(x, y))) == True
